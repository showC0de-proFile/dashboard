{"version":3,"sources":["assets/total-acessos.svg","assets/acessos-horas.svg","assets/moon.svg","assets/sun.svg","assets/logo-mp.svg","assets/clock-time.svg","assets/ranking.svg","assets/crown.svg","assets/calendar.svg","assets/clock-2.svg","assets/logo-mp-branco.svg","assets/backgrounds/analytics-bg12.jpg","assets/conclusao.svg","assets/media.svg","assets/background-indicator.jpg","styles/themes/dark.ts","styles/themes/light.ts","hooks/theme.tsx","hooks/auth.tsx","styles/GlobalStyles.ts","components/Layout/styles.ts","components/Toggle/styles.ts","components/Toggle/index.tsx","utils/emojis.ts","components/MainHeader/styles.ts","components/MainHeader/index.tsx","components/Aside/styles.ts","components/Aside/index.tsx","components/Content/styles.ts","components/Content/index.tsx","components/Layout/index.tsx","utils/sortArrayObjects.js","services/api.ts","components/ContentHeader/styles.ts","components/ContentHeader/index.tsx","components/BoxAverageAccess/styles.ts","components/BoxAverageAccess/index.tsx","components/BoxTotalAccess/styles.ts","components/BoxTotalAccess/index.tsx","components/BoxAccessPeriod/styles.ts","components/BoxAccessPeriod/index.tsx","components/BoxActiveEvolution/styles.ts","components/BoxActiveEvolution/index.tsx","components/BoxAccessDayWeek/styles.ts","components/BoxAccessDayWeek/index.tsx","components/BoxAccessLastHours/styles.ts","components/BoxAccessLastHours/index.tsx","components/BoxTotalConclusion/styles.ts","components/BoxTotalConclusion/index.tsx","components/BoxAccessDevices/styles.ts","components/BoxAccessDevices/index.tsx","components/HistoryAccessDay/styles.ts","components/HistoryAccessDay/index.tsx","components/HistoryConcludedDay/styles.ts","components/HistoryConcludedDay/index.tsx","services/expenses.ts","services/gains.ts","utils/months.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","utils/formatDateTime.ts","components/BoxRankingIndicator/styles.ts","components/BoxRankingIndicator/index.tsx","pages/Ranking/styles.ts","pages/Ranking/index.tsx","routes/app.routes.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","routes/auth.routes.tsx","routes/index.tsx","App.tsx","index.tsx","assets/star.svg"],"names":["module","exports","title","colors","primary","secondary","tertiary","quartenary","white","black","middleGray","gray","grayLight","colorTextButton","titleForm","success","info","warning","ThemeContext","createContext","ThemeProvider","children","useState","themeSaved","localStorage","getItem","JSON","parse","light","theme","setTheme","Provider","value","toggleTheme","dark","setItem","stringify","useTheme","useContext","AuthContext","AuthProvider","logged","setLogged","signIn","name","password","alert","signOut","removeItem","useAuth","createGlobalStyle","Grid","styled","div","Container","ToggleLabel","span","props","ToggleSelector","Switch","attrs","onColor","offColor","offHandleColor","height","width","disabled","Toggle","labelLeft","labelRight","checked","onChange","src","IconDay","alt","uncheckedIcon","checkedIcon","IconNight","Profile","Welcome","h3","UserName","MainHeader","darkTheme","setDarkTheme","emoji","useMemo","indice","Math","floor","random","emojis","length","menuIsOpen","css","Header","header","LogImg","img","MenuContainer","nav","MenuItemLink","a","MenuItemButton","button","ToggleMenu","ThemeToggleFooter","footer","Aside","toggleMenuIsOpened","setToggleMenuIsOpened","onClick","logoImg","href","color","size","Content","Layout","sortArrayObjects","key","order","b","varA","varB","Array","isArray","i","parseInt","toUpperCase","hasOwnProperty","comparison","Api","tasks","this","axios","get","server","data","console","log","sort","slice","monthSelected","yearSelected","total","forEach","item","date","Date","Data","getTime","month","getMonth","year","getFullYear","duration","time","total_time","replace","split","today","yesterday","setHours","getHours","days","concluded","dateTime","indexOf","push","cont","completeds","day","index","access","completedCount","morningNB","afternoonNB","nightNB","midnightNB","hour","toString","hourNumber","periodData","contAccess","TitleContainer","lineColor","Controllers","ContentHeader","animate","keyframes","BackgroundIndicator","IndicatorBox","amount","footerlabel","icon","text","iconSelected","dolarImg","arrowUpImg","arrowDownImg","TimeImg","end","separator","decimal","decimals","BoxAccessPeriod","labels","datasets","label","period","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","BoxActiveEvolution","maintainAspectRatio","ChartContainer","LegendContainer","ul","HistoryBox","li","lineColorAmountEntry","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","formatter","type","strokeWidth","dot","r","activeDot","HistoryConcluded","lineColorAccess","api","Dashboard","setMonthSelected","setYearSelected","totalExpenses","totalBalance","setTotalBalance","totalGains","setTotalGains","totalDuration","setTotalDuration","totalConcluded","setTotalConcluded","totalAccess","setTotalAccess","totalConcludedFinish","setTotalConcludedFinish","totalPeriod","setPeriodAccess","getData","loadData","getTotalTasks","getTotalTasks24Hours","getTotalDurationAverage","getConcludedByDayGraphic","getAccessByDayGraphic","getTotalConcludedFinish","getPeriodAccess","useEffect","loadApi","uniqueYears","expenses","gains","includes","map","listOfMonths","percentGains","Number","toFixed","percentExpenses","percent","_","amountEntry","gain","gainMonth","gainYear","Error","amountOutput","expense","expenseMonth","expenseYear","monthNumber","substr","filter","currentMonth","currentYear","useCallback","parseMonth","parseYear","BoxTotalAccess","BoxAccessLastHours","BoxTotalConclusion","BoxAverageAccess","BoxAccessDayWeek","BoxAccessDevices","HistoryConcludedDay","formatDateTime","dateFormatted","second","getSeconds","minute","getMinutes","getDate","BoxRankingIndicator","users","istime","Flash","Ranking","user","className","Table","id","variant","Row","Col","xs","style","fontWeight","fontSize","SartPoints","final_score","thead","Tasks","override","loading","setLoading","setTasks","usersScore","setScore","usersTime","setTime","pages","setPages","pageActive","setPageActive","getTasks","totalPages","ceil","getUserTotalScore","getUserTotalTime","striped","bordered","hover","textAlign","task","borderBottom","Crown","Clock","Calendar","Pagination","itens","Item","active","event","paginationItem","AppRoutes","path","exact","component","RankingGeral","input","Input","rest","Button","Version","Logo","Form","form","FormTitle","h1","SignIn","setName","setPassword","logoImgB","onSubmit","placeholder","required","e","target","bgSigin","AuthRoutes","Routes","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,yDCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kD,oFCA5B,GACXC,MAAO,OAEPC,OAAQ,CACJC,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,WAAY,UAGZC,MAAO,OACPC,MAAO,OACPC,WAAY,UACZC,KAAM,UACNC,UAAW,UAEXC,gBAAiB,OACjBC,UAAW,OAGXC,QAAS,UACTC,KAAM,UACNC,QAAS,YCtBF,GACXf,MAAO,QAEPC,OAAQ,CACJC,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,WAAY,UAGZC,MAAO,OACPC,MAAO,OACPE,KAAM,UACND,WAAY,UACZE,UAAW,UAEXC,gBAAiB,OACjBC,UAAW,UAEXC,QAAS,UACTC,KAAM,UACNC,QAAS,YCaXC,EAAeC,wBAA6B,IAE5CC,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,oBAAiB,WACvC,IAAMC,EAAaC,aAAaC,QAAQ,oBAExC,OAAGF,EACQG,KAAKC,MAAMJ,GAEXK,KAP+B,mBACvCC,EADuC,KAChCC,EADgC,KAqB9C,OACI,kBAACZ,EAAaa,SAAd,CAAuBC,MAAO,CAAEC,YAXhB,WACG,UAAhBJ,EAAM3B,OACL4B,EAASI,GACTV,aAAaW,QAAQ,mBAAoBT,KAAKU,UAAUF,MAExDJ,EAASF,GACTJ,aAAaW,QAAQ,mBAAoBT,KAAKU,UAAUR,MAKfC,UACxCR,IAKb,SAASgB,IAGL,OAFgBC,qBAAWpB,GCzD/B,IAAMqB,EAAcpB,wBAA4B,IAE1CqB,EAAyB,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EACjBC,oBAAkB,WAG1C,QAFiBE,aAAaC,QAAQ,wBAFG,mBACtCgB,EADsC,KAC9BC,EAD8B,KAqB7C,OACI,kBAACH,EAAYR,SAAb,CAAsBC,MAAO,CAACS,SAAQE,OAf3B,SAACC,EAAcC,GACd,SAATD,GAAgC,QAAbC,GAClBrB,aAAaW,QAAQ,oBAAqB,QAC1CO,GAAU,IAEVI,MAAM,sCAUoCC,QANlC,WACZvB,aAAawB,WAAW,qBACxBN,GAAU,MAKLrB,IAKb,SAAS4B,IAGL,OAFgBX,qBAAWC,G,0ZCrChBW,kBAAf,K,8cCOO,IAAMC,EAAOC,IAAOC,IAAV,K,8VCNV,IAAMC,EAAYF,IAAOC,IAAV,KAKTE,EAAcH,IAAOI,KAAV,KACX,SAAAC,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SAG5BkD,EAAiBN,YAAOO,KAAQC,OACzC,gBAAG/B,EAAH,EAAGA,MAAH,MAAgB,CACZgC,QAAShC,EAAM1B,OAAOa,KACtB8C,SAAUjC,EAAM1B,OAAOG,SACvByD,eAAgB,UAEhBC,OAAQ,GACRC,MAAO,GACPC,UAAS,KARad,CAAH,KC2BZe,EArBwB,SAAC,GAAD,EACnCC,UADmC,EAEnCC,WAFmC,IAGnCC,EAHmC,EAGnCA,QACAC,EAJmC,EAInCA,SAJmC,OAMnC,kBAACjB,EAAD,KAGI,kBAACC,EAAD,KAAc,yBAAKiB,IAAKC,IAASR,MAAM,OAAOS,IAAI,WAClD,kBAAChB,EAAD,CACIY,QAASA,EACTK,eAAe,EACfC,aAAa,EACbL,SAAUA,IAEd,kBAAChB,EAAD,KAAc,yBAAKiB,IAAKK,IAAWZ,MAAM,OAAOS,IAAI,cClC7C,GAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gB,+jBCE7C,IAAMpB,EAAYF,IAAOC,IAAV,KAGE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOE,aAQlB,SAAAoD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOQ,QAGjDmE,EAAU1B,IAAOC,IAAV,KACP,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SAG5BuE,EAAU3B,IAAO4B,GAAV,KAQPC,EAAW7B,IAAOI,KAAV,KCoBN0B,EAhCc,WAAO,IAAD,EACA7C,IAAvBJ,EADuB,EACvBA,YAAaJ,EADU,EACVA,MADU,EAGGP,oBAAS,iBAAsB,SAAhBO,EAAM3B,SAHxB,mBAGxBiF,EAHwB,KAGbC,EAHa,KAUzBC,EAAQC,mBAAQ,WAClB,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,SAAWC,EAAOC,QACjD,OAAOD,EAAOJ,KAChB,IAEF,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACInB,UAAU,QACVC,WAAW,OACXC,QAASa,EACTZ,SAhBc,WACtBa,GAAcD,GACdlD,OAiBI,kBAAC6C,EAAD,KACI,kBAACC,EAAD,8BAA6BM,GAC7B,kBAACJ,EAAD,S,gzFC7BT,IAAM3B,GAAYF,IAAOC,IAAV,MAGE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YAGnB,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOQ,QAW3C,SAAA8C,GAAK,OAAIA,EAAMoC,WAAa,QAAU,UAG9C,SAAApC,GAAK,OAAKA,EAAMoC,YAAcC,YAArB,MAEuB,SAAArC,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOQ,WAKzDoF,GAAS3C,IAAO4C,OAAV,MAONC,GAAS7C,IAAO8C,IAAV,MA+BNC,IApBQ/C,IAAO4B,GAAV,MAGL,SAAAvB,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,SAiBZ2C,IAAOgD,IAAV,OAQbC,GAAejD,IAAOkD,EAAV,KACZ,SAAA7C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOI,cAqB5BgG,GAAiBnD,IAAOoD,OAAV,KAEd,SAAA/C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOI,cAqB5BkG,GAAarD,IAAOoD,OAAV,KAOC,SAAA/C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOc,WACvC,SAAAwC,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SAiB5BkG,GAAoBtD,IAAOuD,OAAV,KAMX,SAAAlD,GAAK,OAAIA,EAAMoC,WAAa,OAAS,UCzEzCe,GA3DS,WAAO,IACnB7D,EAAYE,IAAZF,QADkB,EAEKV,IAAvBJ,EAFkB,EAElBA,YAAaJ,EAFK,EAELA,MAFK,EAI2BP,oBAAS,GAJpC,mBAInBuF,EAJmB,KAICC,EAJD,OAKQxF,oBAAS,iBAAsB,SAAhBO,EAAM3B,SAL7B,mBAKnBiF,EALmB,KAKRC,EALQ,KAmB1B,OACI,kBAAC,GAAD,CAAWS,WAAYgB,GACnB,kBAACd,GAAD,KACI,kBAACU,GAAD,CAAYM,QAdC,WACrBD,GAAuBD,KAcbA,EAAqB,kBAAC,IAAD,MAAc,kBAAC,IAAD,OAGrC,kBAACZ,GAAD,CAAQzB,IAAKwC,IAAStC,IAAI,oBAI9B,kBAACyB,GAAD,KACI,kBAACE,GAAD,CAAcY,KAAK,KACf,kBAAC,IAAD,CAAQC,MAAM,UAAUC,KAAK,UADjC,kBAKA,kBAACd,GAAD,CAAcY,KAAK,YACf,kBAAC,IAAD,CAASC,MAAM,UAAUC,KAAK,UADlC,WAKA,kBAACZ,GAAD,CAAgBQ,QAAShE,GACrB,kBAAC,IAAD,CAAamE,MAAM,UAAUC,KAAK,UADtC,SAMJ,kBAACT,GAAD,CAAmBb,WAAYgB,GAC3B,kBAAC,EAAD,CACIzC,UAAU,QACVC,WAAW,OACXC,QAASa,EACTZ,SAvCU,WACtBa,GAAcD,GACdlD,U,2cC3CD,IAAMqB,GAAYF,IAAOC,IAAV,MAET,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SACjB,SAAAiD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOS,aAYxB,SAAA6C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOE,aAK5B,SAAAoD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YCZzC8G,GANW,SAAC,GAAD,IAAG/F,EAAH,EAAGA,SAAH,OACtB,kBAAC,GAAD,KACKA,ICaMgG,GAXU,SAAC,GAAD,IAAGhG,EAAH,EAAGA,SAAH,OACrB,kBAAC8B,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACM9B,K,gFCbDiG,GAAmB,SAACC,GAAsB,IAAjBC,EAAgB,uDAAV,MACxC,OAAO,SAASlB,EAAGmB,GACjB,IAAIC,EAAO,GACPC,EAAO,GAEX,GAAGC,MAAMC,QAAQN,GACf,IAAI,IAAIO,EAAE,EAAGA,EAAEP,EAAI3B,OAAQkC,IACtBC,SAASzB,EAAEiB,EAAIO,KAAO,GAAKC,SAASzB,EAAEiB,EAAIO,KAAO,KAClDxB,EAAEiB,EAAIO,IAAM,IAAIC,SAASzB,EAAEiB,EAAIO,MAE9BC,SAASN,EAAEF,EAAIO,KAAO,GAAKC,SAASN,EAAEF,EAAIO,KAAO,KAClDL,EAAEF,EAAIO,IAAM,IAAIC,SAASN,EAAEF,EAAIO,MAEjCJ,GAA8B,kBAAdpB,EAAEiB,EAAIO,IAAoBxB,EAAEiB,EAAIO,IAAIE,cAAgB1B,EAAEiB,EAAIO,IAC1EH,GAA8B,kBAAdF,EAAEF,EAAIO,IAAoBL,EAAEF,EAAIO,IAAIE,cAAgBP,EAAEF,EAAIO,QAEvE,CACL,IAAIxB,EAAE2B,eAAeV,KAASE,EAAEQ,eAAeV,GAC7C,OAAO,EAGTG,GADAA,EAA0B,kBAAXpB,EAAEiB,GAAqBjB,EAAEiB,GAAKS,cAAgB1B,EAAEiB,KACzC,GAEtBI,GADAA,EAA0B,kBAAXF,EAAEF,GAAqBE,EAAEF,GAAKS,cAAgBP,EAAEF,KACzC,GAGxB,IAAIW,EAAa,EAMjB,OALIR,EAAOC,EACTO,EAAa,EACJR,EAAOC,IAChBO,GAAc,GAGH,SAAVV,GAAmC,EAAdU,EAAmBA,ICZhCC,GAAb,WAGI,aAAe,0BAFfC,WAEc,EACVC,KAAKD,MAAQ,GAJrB,mMAUiCE,KAAMC,IAzBvB,oGAehB,QAUkBC,EAVlB,QAYsBC,OACNJ,KAAKD,MAAQI,EAAOC,MAbpC,gDAkBYC,QAAQC,IAAI,UAAZ,MACAN,KAAKD,MAAQ,GAnBzB,gJAyBoBC,KAAKD,MAAMQ,KAAKtB,GAAiB,CAAC,cAAe,QAAQ,SACrE,OAAOe,KAAKD,QA1BpB,0CAiCQ,OADiBC,KAAKD,MAAMS,MAAM,EAAG,GAAGD,KAAKtB,GAAiB,CAAC,cAAe,QAAQ,WAhC9F,yCAwCQ,OADgBe,KAAKD,MAAMS,MAAM,EAAG,GAAGD,KAAKtB,GAAiB,CAAC,aAAc,QAAQ,UAvC5F,oCA6CkBwB,EAAsBC,GAChC,IAAIC,EAAgB,EAgBpB,OAdAX,KAAKD,MAAMa,SAAQ,SAAAC,GACf,IAAMC,EAAO,IAAIC,KAAKF,EAAKG,MAG3B,GAAGF,EAAKG,UAAW,CACf,IAAMC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAON,EAAKO,cAEfH,IAAUT,GAAiBW,IAASV,GACnCC,QAKLA,IA9Df,8CAiE4BF,EAAsBC,GAC1C,IAAIC,EAAgB,EAChBW,EAAmB,EAwBvB,OArBAtB,KAAKD,MAAMa,SAAQ,SAAAC,GACf,IAAMC,EAAO,IAAIC,KAAKF,EAAKG,MAE3B,GAAGF,EAAKG,UAAW,CACf,IAAMC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAON,EAAKO,cAElB,GAAGH,IAAUT,GAAiBW,IAASV,EAAa,CAChDC,IAEA,IAAIY,EAAOV,EAAKW,WAAWC,QAAQ,IAAK,IAAIC,MAAM,KAElDJ,GAA+B,GAAlB5B,SAAS6B,EAAK,IAAO,GAAyB,GAAlB7B,SAAS6B,EAAK,IAAU7B,SAAS6B,EAAK,SASpFD,EAAWX,EAAO,KA3FjC,6CA+FQ,IAAIA,EAAgB,EAEhBgB,EAAQ,IAAIZ,KACZa,EAAY,IAAIb,KA0BpB,OAxBAa,EAAUC,SAASF,EAAMG,WAAW,IAEpC9B,KAAKD,MAAMa,SAAQ,SAAAC,GAEf,IAAMC,EAAO,IAAIC,KAAKF,EAAKG,MAQxBF,EAAKG,WAMDH,GAAQc,GAAad,GAAQa,GAC5BhB,OAKLA,IA5Hf,iDAiIQ,IAAIoB,EAAgB,GAChBC,EAAqB,GAEzBhC,KAAKD,MAAMQ,KAAKtB,GAAiB,CAAC,QAAQ,QAAQ2B,SAAQ,SAAAC,GAItD,GAHa,IAAIE,KAAMF,EAAKG,MAGpBC,WAAaJ,EAAKmB,UAAW,CACjC,IAAMC,EAAWpB,EAAKG,KAAKU,MAAM,MAEC,GAA9BK,EAAKG,QAAQD,EAAS,KACtBF,EAAKI,KAAKF,EAAS,IAMvB,IAAIG,EAAQJ,EAAUD,EAAKG,QAAQD,EAAS,KAE5CD,EAAUD,EAAKG,QAAQD,EAAS,KAAOG,EAAOA,EAAO,EAAI,MAKjE,IAAIC,EAA8B,GAMlC,OALAN,EAAKnB,SAAS,SAAC0B,EAAKC,GAChBF,EAAWF,KAAK,CAACJ,KAAKO,EAAKN,UAAUA,EAAUO,GAAQC,OAAO,OAI3DH,IA/Jf,gDAoKQ,IAAII,EAAwB,EAW5B,OATAzC,KAAKD,MAAMa,SAAQ,SAAAC,GACXA,EAAKmB,WACLS,OAODA,IA/Kf,wCAuLQ,IAAIC,EAAmB,EACnBC,EAAqB,EACrBC,EAAiB,EACjBC,EAAoB,EAExB7C,KAAKD,MAAMa,SAAQ,SAAAC,GAGf,GAFa,IAAIE,KAAKF,EAAKG,MAEnBC,UAAW,CACf,IACI6B,EADajC,EAAKG,KAAKU,MAAM,KACb,GAAGqB,WAAWrB,MAAM,KACpCsB,EAAoBtD,SAASoD,EAAK,IAEnCE,GAAc,GAAKA,EAAa,EAC/BH,IACKG,GAAc,GAAKA,EAAa,GACrCN,IACKM,GAAc,IAAMA,EAAa,GACtCL,IAEAC,QAKZ,IAAIK,EAAsB,CAACP,EAAWC,EAAaC,EAASC,GAM5D,OAFAxC,QAAQC,IAAI,YAAa2C,GAElBA,IAtNf,8CA4NQ,IAAIlB,EAAgB,GAChBC,EAAqB,GACrBQ,EAAkB,GAEtBxC,KAAKD,MAAMQ,KAAKtB,GAAiB,CAAC,QAAQ,QAAQ2B,SAAQ,SAAAC,GAItD,GAHa,IAAIE,KAAMF,EAAKG,MAGpBC,UAAW,CACf,IAAMgB,EAAWpB,EAAKG,KAAKU,MAAM,KASjC,IAPkC,GAA9BK,EAAKG,QAAQD,EAAS,KACtBF,EAAKI,KAAKF,EAAS,IAMnBpB,EAAKmB,UAAU,CAEf,IAAII,EAAQJ,EAAUD,EAAKG,QAAQD,EAAS,KAE5CD,EAAUD,EAAKG,QAAQD,EAAS,KAAOG,EAAOA,EAAO,EAAI,EAG7D,IAAIc,EAAcV,EAAOT,EAAKG,QAAQD,EAAS,KAC/CO,EAAOT,EAAKG,QAAQD,EAAS,KAAOiB,EAAaA,EAAa,EAAI,MAK1E,IAAIb,EAA8B,GAMlC,OALAN,EAAKnB,SAAS,SAAC0B,EAAKC,GAChBF,EAAWF,KAAK,CAACJ,KAAKO,EAAKN,UAAUA,EAAUO,GAAQC,OAAOA,EAAOD,QAIlEF,MAjQf,K,gjCCfG,IAAMpH,GAAYF,IAAOC,IAAV,MAeTmI,GAAiBpI,IAAOC,IAAV,MAGV,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SAML,SAAAiD,GAAK,OAAIA,EAAMgI,aAYZ,SAAAhI,GAAK,OAAIA,EAAMgI,aAM7CC,GAActI,IAAOC,IAAV,MCpBTsI,GAdsC,SAAC,GAAD,IACjDzL,EADiD,EACjDA,MAAOuL,EAD0C,EAC1CA,UAAWpK,EAD+B,EAC/BA,SAD+B,OAGjD,kBAAC,GAAD,KACI,kBAACmK,GAAD,CAAgBC,UAAWA,GACvB,4BAAKvL,IAET,kBAACwL,GAAD,KACKrK,K,2xECfb,IAAMuK,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MASK,SAAAI,GAAK,OAAIA,EAAMyD,SAC7B,SAAAzD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,QAEbqL,KASXF,ICuBFG,GA7CoC,SAAC,GAO7C,IANH7L,EAME,EANFA,MACA8L,EAKE,EALFA,OACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAhF,EAEE,EAFFA,MACAiF,EACE,EADFA,KAGMC,EAAe9G,mBAAQ,WACzB,OAAQ4G,GACJ,IAAK,QACD,OAAOG,KACX,IAAK,UACD,OAAOC,KACX,IAAK,YACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,QACE,UAER,CAACN,IAEH,OACI,kBAAC,GAAD,CAAWhF,MAAOA,GACd,8BAAOhH,GACP,4BACI,iCACA,kBAAC,KAAD,CACIuM,IAAKT,EACLU,UAAU,IACVC,QAAQ,IACRC,SAAU,KAKlB,+BAAQX,GACR,yBAAKzH,IAAK4H,EAAc1H,IAAKxE,IAC7B,gCAAMiM,EAAN,O,uqECrDZ,IAAMP,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MASK,SAAAI,GAAK,OAAIA,EAAMyD,SAC7B,SAAAzD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,QAEbqL,KASXF,ICsBFG,GA5CoC,SAAC,GAO7C,IANH7L,EAME,EANFA,MACA8L,EAKE,EALFA,OACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAhF,EAEE,EAFFA,MACAiF,EACE,EADFA,KAGMC,EAAe9G,mBAAQ,WACzB,OAAQ4G,GACJ,IAAK,QACD,OAAOG,KACX,IAAK,UACD,OAAOC,KACX,IAAK,YACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,QACE,UAER,CAACN,IAEH,OACI,kBAAC,GAAD,CAAWhF,MAAOA,GACd,uCAAY,6BAAZ,cACA,4BACI,kBAAC,KAAD,CACIuF,IAAKT,EACLU,UAAU,IACVC,QAAQ,IACRC,SAAU,KAKlB,+BAAQX,GACR,yBAAKzH,IAAK4H,EAAc1H,IAAKxE,IAC7B,gCAAMiM,EAAN,O,g0CCzDZ,IAAMP,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAIE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAWxBoL,IAIA,SAAAnI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aC0D9B+L,GA3E0C,SAAC,GAMnD,IALH3M,EAKE,EALFA,MAGAgH,GAEE,EAJF8E,OAIE,EAHFC,YAGE,EAFF/E,OAIIuB,EAAO,CACXqE,OAAQ,CAAC,WAAS,QAAS,QAAS,aACpCC,SAAU,CACR,CACEC,MAAO,GACPvE,KAPF,EADFwE,OASIC,gBAAiB,CACf,wBACA,wBACA,wBACA,yBAGFC,YAAa,CACX,wBACA,wBACA,wBACA,yBAGFC,YAAa,KAiBjB,OAGI,kBAAC,GAAD,CAAWlG,MAAOA,GACd,8BAAOhH,GACP,4BACI,kCAUJ,oCACE,kBAAC,iBAAD,CACEuI,KAAMA,EACN4E,QA9BE,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,Y,k0CCxDzB,IAAM7B,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAIE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAWxBoL,IAMA,SAAAnI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aC7BvC2H,GAAO,CACTqE,OAAQ,CAAC,WACTC,SAAU,CACR,CACEC,MAAO,GACPvE,KAAM,CAAC,GAAI,IACXyE,gBAAiB,CACf,0BAGFC,YAAa,CACX,0BAGFC,YAAa,KAkDNM,GAnCgD,SAAC,GAKzD,IAJHxN,EAIE,EAJFA,MAGAgH,GACE,EAHF8E,OAGE,EAFFC,YAEE,EADF/E,OAKA,OACI,kBAAC,GAAD,CAAWA,MAAOA,GAad,8BAAOhH,GAEP,oCACI,kBAAC,OAAD,CAAKuI,KAAMA,GAAM4E,QAAS,CAAEM,qBAAqB,Q,yzCC9DjE,IAAM/B,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAIE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAWxBoL,IAIA,SAAAnI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aCrBvC2H,GAAO,CACXqE,OAAQ,CAAC,UAAW,UAAW,WAAS,SAAU,SAAU,QAAS,aACrEC,SAAU,CACR,CACEC,MAAO,GACPvE,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9ByE,gBAAiB,CACf,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAEFC,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAEFC,YAAa,KAMbC,GAAU,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OA8BRZ,GAnB0C,SAAC,GAKnD,IAJH3M,EAIE,EAJFA,MAEA+L,GAEE,EAHFD,OAGE,EAFFC,aACA/E,EACE,EADFA,MAEA,OACI,kBAAC,GAAD,CAAWA,MAAOA,GACd,8BAAOhH,GAGP,oCACE,kBAAC,OAAD,CAAKuI,KAAMA,GAAM4E,QAASA,MAE5B,+BAAQpB,K,mqECpEpB,IAAML,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MASK,SAAAI,GAAK,OAAIA,EAAMyD,SAC7B,SAAAzD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,QAEbqL,KASXF,ICsBFG,GA5CoC,SAAC,GAO7C,IANH7L,EAME,EANFA,MACA8L,EAKE,EALFA,OACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAhF,EAEE,EAFFA,MACAiF,EACE,EADFA,KAGMC,EAAe9G,mBAAQ,WACzB,OAAQ4G,GACJ,IAAK,QACD,OAAOG,KACX,IAAK,UACD,OAAOC,KACX,IAAK,YACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,QACE,UAER,CAACN,IAEH,OACI,kBAAC,GAAD,CAAWhF,MAAOA,GACd,gDACA,4BACI,kBAAC,KAAD,CACIuF,IAAKT,EACLU,UAAU,IACVC,QAAQ,IACRC,SAAU,KAKlB,+BAAQX,GACR,yBAAKzH,IAAK4H,EAAc1H,IAAKxE,IAC7B,gCAAMiM,EAAN,O,mqECpDZ,IAAMP,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MASK,SAAAI,GAAK,OAAIA,EAAMyD,SAC7B,SAAAzD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,QAEbqL,KASXF,ICsBFG,GA5CoC,SAAC,GAO7C,IANH7L,EAME,EANFA,MACA8L,EAKE,EALFA,OACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAhF,EAEE,EAFFA,MACAiF,EACE,EADFA,KAGMC,EAAe9G,mBAAQ,WACzB,OAAQ4G,GACJ,IAAK,QACD,OAAOG,KACX,IAAK,UACD,OAAOC,KACX,IAAK,YACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,QACE,UAER,CAACN,IAEH,OACI,kBAAC,GAAD,CAAWhF,MAAOA,GACd,wDACA,4BACI,kBAAC,KAAD,CACIuF,IAAKT,EACLU,UAAU,IACVC,QAAQ,IACRC,SAAU,KAKlB,+BAAQX,GACR,yBAAKzH,IAAK4H,EAAc1H,IAAKxE,IAC7B,gCAAMiM,EAAN,O,k0CCzDZ,IAAMP,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAIE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAWxBoL,IAMA,SAAAnI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aC7BvC2H,GAAO,CACTqE,OAAQ,CAAC,WACTC,SAAU,CACR,CACEC,MAAO,GACPvE,KAAM,CAAC,IAAK,GACZyE,gBAAiB,CACf,yBAGFC,YAAa,CACX,yBAGFC,YAAa,KAkDNM,GAnCgD,SAAC,GAKzD,IAJHxN,EAIE,EAJFA,MAGAgH,GACE,EAHF8E,OAGE,EAFFC,YAEE,EADF/E,OAKA,OACI,kBAAC,GAAD,CAAWA,MAAOA,GAad,8BAAOhH,GAEP,oCACI,kBAAC,OAAD,CAAKuI,KAAMA,GAAM4E,QAAS,CAAEM,qBAAqB,Q,40DC1DjE,IAAM/B,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAME,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAOxBoL,IAGJgC,GAAiBxK,IAAOC,IAAV,MAKd0C,GAAS3C,IAAO4C,OAAV,MAeF,SAAAvC,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aAUhC+M,GAAkBzK,IAAO0K,GAAV,MCMbC,IDCO3K,IAAO4K,GAAV,MAQS,SAAAvK,GAAK,OAAIA,EAAMyD,SCtDI,SAAC,GAAD,IAC3CuB,EAD2C,EAC3CA,KAAMwF,EADqC,EACrCA,qBADqC,OAG3C,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,mEAEA,kBAACJ,GAAD,OAaJ,kBAACD,GAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWnF,KAAMA,EAAMyF,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAClE,kBAAC,KAAD,CAAeC,gBAAgB,MAAMC,OAAO,YAC5C,kBAAC,KAAD,CAAOC,QAAQ,OAAOD,OAAO,YAC7B,kBAAC,KAAD,CAASE,UAAW,SAAC1M,GAAD,OAAWA,KAC/B,kBAAC,KAAD,CACI2M,KAAK,WACLF,QAAQ,YACR7L,KAAK,gBACL4L,OAAQP,EACRW,YAAa,EACbC,IAAK,CAAEC,EAAG,GACVC,UAAW,CAAED,EAAG,W,m0DCvDxC,IAAMlD,GAAUC,YAAH,MAcAvI,GAAYF,IAAOC,IAAV,MAME,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YACvC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,QAOxBoL,IAGJgC,GAAiBxK,IAAOC,IAAV,MAKd0C,GAAS3C,IAAO4C,OAAV,MAeF,SAAAvC,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aAUhC+M,GAAkBzK,IAAO0K,GAAV,MCiBbkB,IDVO5L,IAAO4K,GAAV,MAQS,SAAAvK,GAAK,OAAIA,EAAMyD,SCpDgB,SAAC,GAAD,IACvDuB,EADuD,EACvDA,KAAMwF,EADiD,EACjDA,qBAAsBgB,EAD2B,EAC3BA,gBAD2B,OAGvD,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,+DAEA,kBAAC,GAAD,OAaJ,kBAAC,GAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWxG,KAAMA,EAAMyF,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAClE,kBAAC,KAAD,CAAeC,gBAAgB,MAAMC,OAAO,YAC5C,kBAAC,KAAD,CAAOC,QAAQ,OAAOD,OAAO,YAC7B,kBAAC,KAAD,CAASE,UAAW,SAAC1M,GAAD,OAAWA,KAC/B,kBAAC,KAAD,CACI2M,KAAK,WACLF,QAAQ,YACR7L,KAAK,gBACL4L,OAAQP,EACRW,YAAa,EACbC,IAAK,CAAEC,EAAG,GACVC,UAAW,CAAED,EAAG,KAGpB,kBAAC,KAAD,CACIH,KAAK,WACLF,QAAQ,SACR7L,KAAK,UACL4L,OAAQS,EACRL,YAAa,EACbC,IAAK,CAAEC,EAAG,GACVC,UAAW,CAAED,EAAG,WCzEzB,IACb,CAAC,OAAS,SAAU,KAAO,cAC3B,CAAC,OAAU,UAAW,KAAQ,eCFjB,IACb,CAAC,OAAU,UAAW,KAAQ,cAC9B,CAAC,OAAU,UAAW,KAAQ,eCFjB,IACX,UACA,YACA,WACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,Y,+NCVG,ICgCHI,GDhCS5L,GAAYF,IAAOC,IAAV,MAET+D,GAAUhE,IAAOC,IAAV,MCqUL8L,GArSa,WAAoB,IAAD,EACD7N,oBAAiB,IAAI8H,MAAOI,WAAa,GADxC,mBACpCV,EADoC,KACrBsG,EADqB,OAEH9N,oBAAiB,IAAI8H,MAAOM,eAFzB,mBAEpCX,EAFoC,KAEtBsG,EAFsB,OAGD/N,mBAAiB,GAHhB,mBAGpCgO,EAHoC,aAIHhO,mBAAiB,IAJd,mBAIpCiO,EAJoC,KAItBC,EAJsB,OAKPlO,mBAAiB,GALV,mBAKpCmO,EALoC,KAKxBC,EALwB,OAMDpO,mBAAiB,GANhB,mBAMpCqO,EANoC,KAMrBC,EANqB,OAQCtO,mBAA2B,IAR5B,mBAQpCuO,EARoC,KAQpBC,EARoB,OASLxO,mBAA2B,IATtB,mBASpCyO,EAToC,KASvBC,EATuB,OAWa1O,mBAAiB,GAX9B,mBAWpC2O,EAXoC,KAWdC,EAXc,OAYJ5O,mBAAmB,IAZf,mBAYpC6O,EAZoC,KAYvBC,EAZuB,mDA0B3C,uBAAA9J,EAAA,6DACE4I,GAAM,IAAI/G,GADZ,SAEQ+G,GAAImB,UAFZ,OAGEC,IAHF,4CA1B2C,sBAgC3C,SAASA,IACLd,EAAgBN,GAAIqB,cAAczH,EAAeC,IACjD2G,EAAcR,GAAIsB,wBAClBZ,EAAiBV,GAAIuB,wBAAwB3H,EAAeC,IAE5D+G,EAAkBZ,GAAIwB,4BACtBV,EAAed,GAAIyB,yBAEnBT,EAAwBhB,GAAI0B,2BAE5BR,EAAgBlB,GAAI2B,mBAxBxBC,qBAAU,YAlBiC,mCAmBzCC,KACC,IAEHD,qBAAU,WACRR,MACC,CAACxH,EAAeC,IAqBLzD,mBAAQ,WAClB,IAAI0L,EAAwB,GAW5B,MATA,uBAAIC,IAAJ,aAAiBC,KAAOjI,SAAQ,SAAAC,GAC5B,IACMO,EADO,IAAIL,KAAKF,EAAKC,MACTO,cAEdsH,EAAYG,SAAS1H,IACrBuH,EAAYxG,KAAKf,MAIlBuH,EAAYI,KAAI,SAAA3H,GACnB,MAAO,CACHzH,MAAOyH,EACPuD,MAAOvD,QAGjB,IAGanE,mBAAQ,WACnB,OAAO+L,GAAaD,KAAI,SAAC7H,EAAOqB,GAC5B,MAAO,CACH5I,MAAO4I,EAAQ,EACfoC,MAAOzD,QAGjB,IAIkCjE,mBAAQ,WACxC,IAAM0D,EAAQyG,EAAaH,EAErBgC,EAAeC,QAAS9B,EAAazG,EAAS,KAAKwI,QAAQ,IAC3DC,EAAkBF,QAASjC,EAAgBtG,EAAS,KAAKwI,QAAQ,IAiBvE,MAfa,CACT,CACI5O,KAAM,UACNZ,MAAOyN,EACPiC,QAASJ,GAA8B,EACvCpK,MAAO,WAEX,CACItE,KAAM,SACNZ,MAAOsN,EACPoC,QAASD,GAAoC,EAC7CvK,MAAO,cAKjB,CAACuI,EAAYH,IAEKhK,mBAAQ,WACxB,OAAO+L,GAAaD,KAAI,SAACO,EAAGpI,GAExB,IAAIqI,EAAc,EAClBV,GAAMjI,SAAQ,SAAA4I,GACV,IAAM1I,EAAO,IAAIC,KAAKyI,EAAK1I,MACrB2I,EAAY3I,EAAKK,WACjBuI,EAAW5I,EAAKO,cAEtB,GAAGoI,IAAcvI,GAASwI,IAAahJ,EACnC,IACI6I,GAAeL,OAAOM,EAAK7F,QAC9B,SACG,MAAM,IAAIgG,MAAM,iEAK5B,IAAIC,EAAe,EAgBnB,OAfAhB,GAAShI,SAAQ,SAAAiJ,GACb,IAAM/I,EAAO,IAAIC,KAAK8I,EAAQ/I,MACxBgJ,EAAehJ,EAAKK,WACpB4I,EAAcjJ,EAAKO,cAEzB,GAAGyI,IAAiB5I,GAAS6I,IAAgBrJ,EACzC,IACIkJ,GAAgBV,OAAOW,EAAQlG,QAClC,SACG,MAAM,IAAIgG,MAAM,mEAMrB,CACHK,YAAa9I,EACbA,MAAO8H,GAAa9H,GAAO+I,OAAO,EAAG,GACrCV,cACAK,mBAGPM,QAAO,SAAArJ,GACJ,IAAMsJ,GAAe,IAAIpJ,MAAOI,WAC1BiJ,GAAc,IAAIrJ,MAAOM,cAC/B,OAAQX,IAAiB0J,GAAevJ,EAAKmJ,aAAeG,GAAkBzJ,EAAe0J,OAEnG,CAAC1J,IAOyB2J,uBAAY,SAACnJ,GACrC,IACI,IAAMoJ,EAAapB,OAAOhI,GAC1B6F,EAAiBuD,GAErB,SACI,MAAM,IAAIX,MAAM,6CAEtB,IAGyBU,uBAAY,SAACjJ,GACpC,IACI,IAAMmJ,EAAYrB,OAAO9H,GACzB4F,EAAgBuD,GAEpB,SACI,MAAM,IAAIZ,MAAM,qDAEtB,IAGF,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAe9R,MAAM,GAAGuL,UAAU,YAalC,kBAAC,GAAD,KACI,kBAACoH,GAAD,CACI3S,MAAM,mBACNgH,MAAM,UACN8E,OAAQuD,EACRtD,YAAY,GACZC,KAAK,QACLC,KAAK,MAGT,kBAAC2G,GAAD,CACI5S,MAAM,kBACNgH,MAAM,UACN8E,OAAQyD,EACRxD,YAAY,GACZC,KAAK,UACLC,KAAK,MAGT,kBAAC4G,GAAD,CACI7S,MAAM,yBACNgH,MAAM,UACN8E,OAAQiE,EACRhE,YAAY,GACZC,KAAK,YACLC,KAAK,MAIT,kBAAC6G,GAAD,CACI9S,MAAM,kCACNgH,MAAM,UACN8E,OAAQ2D,EACR1D,YAAY,GACZC,KAAK,OACLC,KAAK,YAOT,kBAAC,GAAD,CACIjM,MAAM,yBACN8L,OAAQ,EACRC,YAAY,GACZ/E,MAAM,UACN+F,OAAUkD,IAOd,kBAAC8C,GAAD,CACI/S,MAAM,6BACNgH,MAAM,UACN8E,OAAQyD,EACRxD,YAAY,KAKhB,kBAAC,GAAD,CACI/L,MAAM,0CACNgH,MAAM,UACN8E,OAAQyD,EACRxD,YAAY,KAOhB,kBAACiH,GAAD,CACIhT,MAAM,oBACNgH,MAAM,UACN8E,OAAQyD,EACRxD,YAAY,KAMhB,kBAAC,GAAD,CACIxD,KAAMoH,EACN5B,qBAAqB,YAIzB,kBAACkF,GAAD,CACI1K,KAAMsH,EACN9B,qBAAqB,UACrBgB,gBAAgB,e,oBC1SpBmE,GAtBO,SAACjK,GACpB,IAAMkK,EAAgB,IAAIjK,KAAKD,GACzBM,EAAO4J,EAAc3J,cAErB4J,EAASD,EAAcE,aAAe,EAC1CF,EAAcE,aADD,WACoBF,EAAcE,cAE3CC,EAASH,EAAcI,aAAe,EAC1CJ,EAAcI,aADD,WACoBJ,EAAcI,cAE3CtI,EAAOkI,EAAclJ,WAAa,EACtCkJ,EAAclJ,WADH,WACoBkJ,EAAclJ,YAEzCQ,EAAM0I,EAAcK,UAAY,EACpCL,EAAcK,UADJ,WACoBL,EAAcK,WAExCnK,EAAQ8J,EAAc7J,WAAa,EAAI,EAC3C6J,EAAc7J,WAAa,EADf,WACuB6J,EAAc7J,WAAa,GAEhE,MAAM,GAAN,OAAUmB,EAAV,YAAiBpB,EAAjB,YAA0BE,EAA1B,YAAkC0B,EAAlC,YAA0CqI,EAA1C,YAAoDF,I,ynGCbxD,IAAM1H,GAAUC,YAAH,MAmBAvI,GAAYF,IAAOC,IAAV,MAUE,SAAAI,GAAK,OAAIA,EAAMyD,SAC1B,SAAAzD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,QAWxBmL,IAQU,SAAAnI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,SCqFxCkT,GA1GkD,SAAC,GAW3D,IAVHzT,EAUE,EAVFA,MAGAgM,GAOE,EATFF,OASE,EARFC,YAQE,EAPFC,MACAhF,EAME,EANFA,MAEA0M,GAIE,EALFzH,KAKE,EAJFyH,OACAC,EAGE,EAHFA,OAKMzH,EAAe9G,mBAAQ,WACzB,OAAQ4G,GACJ,IAAK,QACD,OAAOG,KACX,IAAK,UACD,OAAOC,KACX,IAAK,QACD,OAAOwH,KACX,IAAK,UACD,OAAOC,KACX,QACE,UAER,CAAC7H,IAIH,OAEI,oCAEA,kBAAC,GAAD,CAAWhF,MAAOA,GAEd,oCACK0M,EAAMxC,KAAI,SAAC4C,EAAMpJ,GAAP,OACP,oCACA,yBAAKqJ,UAAU,YACf,kBAACC,GAAA,EAAD,CAAOC,GAAG,cAAgBC,QAAQ,SAC9B,+BACI,wBAAI7M,IAAKqD,GACL,kBAACyJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,EAAEC,MAAO,CAAEtN,MAAO,UAAWuN,WAAY,OAAQC,SAAS,OAAQxH,gBAAiB,SAA5F,IAAuGtC,EAAQ,EAA/G,KAEA,kBAAC0J,GAAA,EAAD,CAAKC,GAAI,EAAEC,MAAO,CAAEtN,MAAO,UAAWuN,WAAY,OAAQC,SAAS,OAASxH,gBAAiB,SAA7F,KAAyG8G,EAAKpR,KAA9G,KAIIiR,EACI,kBAACS,GAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAAEtN,MAAO,UAAWuN,WAAY,OAAQvH,gBAAiB,SAA5E,IAAsF,yBAAK1I,IAAKmQ,KAAY1Q,MAAM,SAAlH,IAA4H+P,EAAKY,YAAjI,YAEA,kBAACN,GAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAAEtN,MAAO,UAAWuN,WAAY,OAAQvH,gBAAiB,SAA5E,KAAwF8G,EAAKnK,WAA7F,qBA2BlC,8BAAO3J,GACP,8BACA,iCACA,yBAAKsE,IAAK4H,EAAc1H,IAAKxE,O,87CClHhC,IAAMoD,GAAYF,IAAOC,IAAV,MAkDT+D,GAAUhE,IAAOC,IAAV,MAWCD,IAAOyR,MAAV,MAOL,SAAApR,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOM,SAEjB,SAAAgD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YAChC,SAAAmD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOc,W,kLC8I/B6T,OA9Lf,WAEE,IAAMC,EAAWjP,eAAH,MAFc,EAWExE,oBAAS,GAXX,mBAWrB0T,EAXqB,KAWZC,EAXY,OAYJ3T,mBAAS,WAZL,mBAYvB4F,EAZuB,aAcF5F,mBAAiB,KAdf,mBAcrB8G,EAdqB,KAcd8M,EAdc,OAgBG5T,mBAAiB,IAhBpB,mBAgBrB6T,EAhBqB,KAgBTC,EAhBS,OAiBC9T,mBAAiB,IAjBlB,mBAiBrB+T,EAjBqB,KAiBVC,EAjBU,OAqBFhU,mBAAS,GArBP,mBAqBrBiU,EArBqB,KAqBdC,EArBc,OAsBQlU,mBAAS,GAtBjB,mBAsBrBmU,EAtBqB,KAsBTC,EAtBS,mDA+B5B,iCAAApP,EAAA,6DACM4I,EAAM,IAAI/G,GAEd8M,GAAW,GAHb,SAKQ/F,EAAImB,UALZ,OAOMjI,EAAQ8G,EAAIyG,WAEZC,EAAapQ,KAAKqQ,KAAKzN,EAAMxC,OAAO,IAGxCwP,EAASlG,EAAI4G,qBACbR,EAAQpG,EAAI6G,oBAEZP,EAASI,GAETV,EAAS9M,GAET6M,GAAW,GAnBb,6CA/B4B,sBA0E5B,OAhDAnE,qBAAU,YA1BkB,mCA2B1BC,KAEC,IAiDL,kBAAC,GAAD,KACI,kBAAC,GAAD,KACE,6BAGEiE,EAEE,yBAAKf,UAAU,iBACb,4BACE,kBAAC,KAAD,CAAY/M,MAAOA,EAAO8N,QAASA,EAASlP,IAAKiP,EAAU5N,KAAM,KACjE,6CAON,oCAEA,kBAAC,GAAD,CACIjH,MAAM,+BACNgH,MAAM,UACN8E,OAAQ,GACRC,YAAY,GACZC,KAAK,UACLC,KAAK,UACLyH,MAAOuB,EACPtB,QAAQ,IAKZ,kBAAC,GAAD,CACI3T,MAAM,sBACNgH,MAAM,UACN8E,OAAQ,GACRC,YAAY,GACZC,KAAK,QACLC,KAAK,UACLyH,MAAOyB,EACPxB,QAAQ,IAkBN,kBAACK,GAAA,EAAD,CAAOC,GAAG,cAAc6B,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC9B,QAAQ,SACrD,2BAAOI,MAAO,CAAEtN,MAAO,UAAWuN,WAAY,OAAQvH,gBAAiB,YACrE,4BACE,wBAAIsH,MAAO,CAAEtN,MAAO,UAAWiP,UAAW,SAAUjJ,gBAAiB,SAArE,KACA,oCACA,qCACA,oCACA,iDAMJ,+BAEG9E,EAAMS,MAAM,IAAI4M,EAAW,GAAI,GAAGA,GAAYrE,KAAI,SAACgF,EAAMxL,GAAP,OACjD,wBAAIrD,IAAKqD,EAAO4J,MAAO5J,EAAQ,GAAK,CAAE1D,MAAO,UAAWgG,gBAAiB,OAAQwH,SAAS,OAAQ2B,aAAc,qBAAuB,CAAEnP,MAAO,UAAWwN,SAAS,SAClK,wBAAIF,MAAO,CAAEtN,MAAO,UAAWiP,UAAW,SAAU1B,WAAY,OAAQC,SAAS,SAAjF,IAA8F9J,EAAQ,EAAI,IAAI6K,EAAW,GAAzH,KAGI7K,EAAQ,EAAI,IAAI6K,EAAW,IAAQ,EACnC,gCAAK,yBAAKjR,IAAK8R,KAAOrS,MAAM,SAA5B,IAAsCmS,EAAKxT,KAA3C,KAEA,gCAAMwT,EAAKxT,KAAX,KAGJ,gCAAK,yBAAK4B,IAAK+R,KAAOtS,MAAM,SAA5B,IAAsCmS,EAAKvM,WAA3C,KACA,gCAAK,yBAAKrF,IAAKgS,KAAUvS,MAAM,SAA/B,IAAyCmP,GAAegD,EAAK/M,OAC7D,gCAAK,yBAAK7E,IAAKmQ,KAAY1Q,MAAM,SAAjC,IAA2CmS,EAAKxB,mBAUxD,kBAAC6B,GAAA,EAAD,CAAYtP,KAAK,MApH7B,WAGE,IAFA,IAAIuP,EAAQ,GAD4B,WAG/B5O,GACP4O,EAAMlM,KACJ,kBAACiM,GAAA,EAAWE,KAAZ,CAAiBpP,IAAKO,EAAG8O,OAAQ9O,IAAM2N,EAAY1O,QAAS,SAAC8P,GATjEnB,EASmF5N,KAC5EA,KAHEA,EAAI,EAAGA,GAAKyN,EAAOzN,IAAK,EAAxBA,GAUT,OAAO4O,EAyGOI,SCvLLC,GAVa,kBACxB,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/H,KACjC,kBAAC,IAAD,CAAO6H,KAAK,WAAWC,OAAK,EAACC,UAAYC,Q,sMCX9C,IAAM7T,GAAYF,IAAOgU,MAAV,MAOT,SAAA3T,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOO,cCC1B2W,GAJsB,SAAC,GAAD,IAAMC,EAAN,2BACjC,kBAAC,GAAcA,I,8TCLZ,IAAMhU,GAAYF,IAAOoD,OAAV,MAST,SAAA/C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOU,mBACjB,SAAA4C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOc,WCArCsW,GANwB,SAAC,GAAD,IAAElW,EAAF,EAAEA,SAAaiW,EAAf,oCACnC,kBAAC,GAAcA,EACVjW,I,slDCJF,IAAMiC,GAAYF,IAAOC,IAAV,MAYE,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOC,WAUvCoX,GAAUpU,IAAOC,IAAV,MAIH,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOQ,QAShC8W,GAAOrU,IAAOC,IAAV,MAQG,SAAAI,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOK,SAI/B,SAAAiD,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOY,WAgBhC2W,GAAOtU,IAAOuU,KAAV,MASO,SAAAlU,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOG,YAGvCsX,GAAYxU,IAAOyU,GAAV,MAGT,SAAApU,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOW,aAML,SAAA2C,GAAK,OAAIA,EAAM5B,MAAM1B,OAAOY,WCdjD+W,GAlDU,WAAO,IAAD,EACHxW,mBAAiB,IADd,mBACpBsB,EADoB,KACdmV,EADc,OAEKzW,mBAAiB,IAFtB,mBAEpBuB,EAFoB,KAEVmV,EAFU,KAInBrV,EAAWM,IAAXN,OAER,OACI,kBAAC,GAAD,KAGI,kBAAC8U,GAAD,KACI,yBAAKjT,IAAKyT,KAAUvT,IAAI,yBACxB,0CAGJ,kBAACgT,GAAD,CAAMQ,SAAU,kBAAMvV,EAAOC,EAAMC,KAC/B,kBAAC+U,GAAD,eAEA,kBAAC,GAAD,CACIjJ,KAAK,OACLwJ,YAAY,OACZC,UAAQ,EACR7T,SAAU,SAAC8T,GAAD,OAAON,EAAQM,EAAEC,OAAOtW,UAEtC,kBAAC,GAAD,CACI2M,KAAK,WACLwJ,YAAY,QACZC,UAAQ,EACR7T,SAAU,SAAC8T,GAAD,OAAOL,EAAYK,EAAEC,OAAOtW,UAG3C,kBAAC,GAAD,CAAQ2M,KAAK,UAAb,YAOH,yBAAKnK,IAAK+T,KAAS7T,IAAI,eAEvB,kBAAC8S,GAAD,KACI,6ECtDDgB,GANc,kBACzB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxB,KAAK,IAAIE,UAAWY,OCcpBW,GAVU,WAAO,IACpBhW,EAAWQ,IAAXR,OAER,OACI,kBAAC,IAAD,KACMA,EAAS,kBAAC,GAAD,MAAS,kBAAC,GAAD,QCQjBiW,GAbO,WAAO,IAClB7W,EAASQ,IAATR,MAEP,OACI,kBAAC,IAAD,CAAeA,MAAOA,GAClB,kBAAC,IAAD,KACI,kBAAC8W,EAAD,MACA,kBAAC,GAAD,SCPhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,U,mBCnB1BhZ,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c5f33be2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/total-acessos.89b7de06.svg\";","module.exports = __webpack_public_path__ + \"static/media/acessos-horas.4a2d8ad3.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.bd7c1a63.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.e08ea220.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-mp.86bff31d.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-time.b85285ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/ranking.944de898.svg\";","module.exports = __webpack_public_path__ + \"static/media/crown.85693ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.c73d96b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-2.51639ddf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-mp-branco.a47f9091.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics-bg12.fcb49e56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/conclusao.b0d9dfc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/media.280db470.svg\";","module.exports = __webpack_public_path__ + \"static/media/background-indicator.6dda5cd3.jpg\";","export default {\n    title: 'dark',\n\n    colors: {\n        primary: '#212129',\n        secondary: '#35373f',\n        tertiary: '#2a2c34',\n        quartenary: '#e9e9ef',\n        \n\n        white: '#fff',\n        black: '#000',\n        middleGray: '#35373f',\n        gray: '#BFBFBF',\n        grayLight: '#35373f',\n\n        colorTextButton: '#fff',\n        titleForm: '#fff',\n\n\n        success: '#2695F9',\n        info: '#F7931B',\n        warning: '#19547F',\n    },\n};","export default {\n    title: 'light',\n\n    colors: {\n        primary: '#DCDCDC',\n        secondary: '#FFFFFF',\n        tertiary: '#F5F5F5',\n        quartenary: '#0f1014',\n\n\n        white: '#000',\n        black: '#fff',        \n        gray: '#BFBFBF',\n        middleGray: '#35373f',\n        grayLight: '#f9fafc',\n\n        colorTextButton: '#fff',\n        titleForm: '#545454', \n\n        success: '#2695F9',\n        info: '#3B5998',\n        warning: '#19547F',\n    },\n};","import React, { createContext, useState, useContext } from 'react';\n\nimport dark from '../styles/themes/dark';\nimport light from '../styles/themes/light';\n\ninterface IThemeContext {\n    toggleTheme(): void;\n    theme: ITheme;\n}\n\ninterface ITheme {\n    title: string;\n\n    colors: {\n        primary: string;\n        secondary: string;\n        tertiary: string;\n        quartenary: string;          \n\n        white: string;\n        black: string;\n        gray: string;\n        grayLight: string;\n        middleGray: string;\n\n        colorTextButton: string;\n        titleForm: string;\n\n        success: string;\n        info: string;\n        warning: string;\n    }\n}\n\nconst ThemeContext = createContext<IThemeContext>({} as IThemeContext);\n\nconst ThemeProvider: React.FC = ({ children }) => {\n    const [theme, setTheme] = useState<ITheme>(() => {\n        const themeSaved = localStorage.getItem('@dashboard:theme');\n\n        if(themeSaved) {\n            return JSON.parse(themeSaved);\n        }else{\n            return light;\n        }\n    });\n\n    const toggleTheme = () => {\n        if(theme.title === 'light'){\n            setTheme(dark);\n            localStorage.setItem('@dashboard:theme', JSON.stringify(dark));\n        }else{\n            setTheme(light);\n            localStorage.setItem('@dashboard:theme', JSON.stringify(light));\n        }\n    };\n\n    return (\n        <ThemeContext.Provider value={{ toggleTheme, theme }}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\nfunction useTheme(): IThemeContext {\n    const context = useContext(ThemeContext);\n\n    return context;\n}\n\n\nexport { ThemeProvider, useTheme };\n","import React, { createContext, useState, useContext } from 'react';\n\ninterface IAuthContext {\n    logged: boolean;\n    signIn(name: string, password: string): void;\n    signOut(): void;\n}\n\nconst AuthContext = createContext<IAuthContext>({} as IAuthContext);\n\nconst AuthProvider: React.FC = ({ children }) => {\n    const [logged, setLogged] = useState<boolean>(() => {\n        const isLogged = localStorage.getItem('@dashboard:logged');\n\n        return !!isLogged;\n    });\n\n    const signIn = (name: string, password: string) => {\n        if(name === 'user' && password === '123'){\n            localStorage.setItem('@dashboard:logged', 'true');\n            setLogged(true);\n        }else{\n            alert('Senha ou usuário inválidos!');\n        }\n    }\n\n    const signOut = () => {\n        localStorage.removeItem('@dashboard:logged');\n        setLogged(false);\n    }\n\n    return (\n        <AuthContext.Provider value={{logged, signIn, signOut}}>\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuth(): IAuthContext {\n    const context = useContext(AuthContext);\n\n    return context;\n}\n\nexport { AuthProvider, useAuth };","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    html, body, #root {\n        height: 100%;\n    }\n\n    *, button, input {\n        border: 0;\n        outline: 0;\n        font-family: 'Roboto', sans-serif;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;","import styled from 'styled-components';\n\n/**\n* Layout\n* MH = Main Header\n* AS = Aside\n* CT = Content    \n*/\n\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: 200px auto;\n    grid-template-rows: 70px auto;\n\n    grid-template-areas:\n    'AS MH'\n    'AS CT';\n\n    height: 100vh;\n    min-width: 315px;\n\n    @media(max-width: 600px){\n        grid-template-columns: 100%;\n        grid-template-rows: 70px auto;\n\n        grid-template-areas:\n        'MH'\n        'CT';\n    }\n`;\n","import styled from 'styled-components';\nimport Switch, { ReactSwitchProps } from 'react-switch';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const ToggleLabel = styled.span`\n    color: ${props => props.theme.colors.white};\n`;\n\nexport const ToggleSelector = styled(Switch).attrs<ReactSwitchProps>(\n    ({ theme }) => ({\n        onColor: theme.colors.info,\n        offColor: theme.colors.tertiary,\n        offHandleColor: '#2695F9',\n\n        height: 20,\n        width: 35,\n        disabled:false\n    }))<ReactSwitchProps>`\n    margin: 0 7px;\n`;\n","import React from 'react';\n\nimport IconNight from '../../assets/moon.svg';\nimport IconDay from '../../assets/sun.svg';\nimport {\n    Container,\n    ToggleLabel,\n    ToggleSelector\n} from './styles';\n\n\ninterface IToggleProps {\n    labelLeft: string;\n    labelRight: string;\n    checked: boolean;\n    onChange(): void;\n}\n\nconst Toggle: React.FC<IToggleProps> = ({\n    labelLeft,\n    labelRight,\n    checked,\n    onChange\n}) => (\n    <Container>\n         \n\n        <ToggleLabel>{<img src={IconDay} width=\"30px\" alt=\"Claro\"/>}</ToggleLabel>\n        <ToggleSelector                    \n            checked={checked}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            onChange={onChange}\n        />\n        <ToggleLabel>{<img src={IconNight} width=\"20px\" alt=\"Escuro\"/>}</ToggleLabel>\n\n    </Container>\n)\n\nexport default Toggle;","export default ['🙂', '😀', '😷', '😎', '😁', '😃', '😄'];","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    grid-area: MH;\n    \n    background-color: ${props => props.theme.colors.secondary};\n    \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 0 10px;\n\n    /* border-bottom: 1px solid ${props => props.theme.colors.gray}; */\n`;\n\nexport const Profile = styled.div`\n    color: ${props => props.theme.colors.white};\n`;\n\nexport const Welcome = styled.h3`\n    font-size:15px;\n    top: 10px;\n    position: relative;\n\n\n`;\n\nexport const UserName = styled.span``;","import React, { useMemo, useState } from 'react';\nimport Toggle from '../Toggle';\n\nimport emojis from '../../utils/emojis';\n\n\nimport { useTheme } from '../../hooks/theme';\n\nimport { \n    Container, \n    Profile, \n    Welcome, \n    UserName, \n}  from './styles';\n\n\nconst MainHeader: React.FC = () => {\n    const { toggleTheme, theme } = useTheme();\n\n    const [darkTheme, setDarkTheme] = useState(() => theme.title === 'dark' ? true : false);\n\n    const handleChangeTheme = () => {\n        setDarkTheme(!darkTheme);\n        toggleTheme();\n    }\n\n    const emoji = useMemo(() => {\n        const indice = Math.floor(Math.random() * emojis.length);\n        return emojis[indice];\n    },[]);\n\n    return (\n        <Container>\n            <Toggle\n                labelLeft=\"Light\"\n                labelRight=\"Dark\"\n                checked={darkTheme}\n                onChange={handleChangeTheme}\n            />\n\n            <Profile>\n                <Welcome>Olá, Administrador {emoji}</Welcome>\n                <UserName></UserName>\n            </Profile>\n        </Container>\n    );\n}\n\nexport default MainHeader;","import styled, { css } from 'styled-components';\n\n\ninterface IContainerProps {\n    menuIsOpen: boolean;\n}\n\n\ninterface IThemeToggleFooterProps {\n    menuIsOpen: boolean;\n}\n\n\nexport const Container = styled.div<IContainerProps>`\n    grid-area: AS;\n    \n    background-color: ${props => props.theme.colors.tertiary};\n    padding-left: 20px;\n\n    /* border-right: 1px solid ${props => props.theme.colors.gray}; */\n\n    position: relative;\n\n    @media(max-width: 600px){\n        padding-left: 20px;\n        position: fixed;\n        z-index: 2;\n\n        width: 170px;\n\n        height: ${props => props.menuIsOpen ? '100vh' : '70px'};\n        overflow: hidden;\n\n        ${props => !props.menuIsOpen && css`\n            border: none;\n            /* border-bottom: 1px solid ${props => props.theme.colors.gray}; */\n        `};\n    }\n`;\n\nexport const Header = styled.header`\n    height: 70px;\n    display: flex;\n    align-items: center;\n\n`;\n\nexport const LogImg = styled.img`\n    width: 160px;\n    height: auto;\n\n   /* background-color: tomato; */\n\n    @media(max-width: 600px){        \n        display: none;\n    }\n`;\n\nexport const Title = styled.h3`\n\n    position:relative;\n    color: ${props => props.theme.colors.black};\n    margin-left: -40px;\n    margin-top: 56px;\n    font-size: 12px;\n    align-items: center;\n    width: 120px;\n    height: auto;\n    background: #2695F9;\n    padding: 2px;\n    text-align: center;\n\n    @media(max-width: 600px){\n        display: none;\n    }\n`;\n\n\nexport const MenuContainer = styled.nav`\n    display: flex;\n    flex-direction: column;\n\n\n    margin-top: 50px;\n`;\n\nexport const MenuItemLink = styled.a`\n    color: ${props => props.theme.colors.quartenary};\n    text-decoration: none;\n\n    margin: 7px 0;\n    display: flex;\n    align-items: center;\n\n    transition: opacity .3s;\n\n    &:hover {\n        opacity: .7;\n    }\n\n    > svg {\n        font-size: 18px;\n        margin-right: 5px;\n    }\n`;\n\n\n\nexport const MenuItemButton = styled.button`\n    font-size: 16px;\n    color: ${props => props.theme.colors.quartenary};\n    \n    border: none;\n    background: none;\n\n    margin: 7px 0;\n    display: flex;\n    align-items: center;\n\n    transition: opacity .3s;\n\n    &:hover {\n        opacity: .7;\n    }\n\n    > svg {\n        font-size: 18px;\n        margin-right: 5px;\n    }\n`;\n\nexport const ToggleMenu = styled.button`\n    width: 40px;\n    height: 40px;\n\n    border-radius: 5px;\n    font-size: 22px;\n    \n    background-color: ${props => props.theme.colors.warning};\n    color: ${props => props.theme.colors.white};\n\n    transition: opacity .3s;\n\n    &:hover{\n        opacity: 0.7;\n    }\n\n    display: none;\n\n    @media(max-width: 600px){\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nexport const ThemeToggleFooter = styled.footer<IThemeToggleFooterProps>`\n    display: none;\n    position: absolute;\n    bottom: 30px;\n    \n    @media(max-width: 470px){\n        display: ${props => props.menuIsOpen ? 'flex' : 'none'};\n    }\n\n`;","import React, {useState} from 'react';\nimport Toggle from '../Toggle';\n\nimport {\n    MdExitToApp,\n    MdClose,\n    MdMenu, \n    MdHome,\n    MdGrade\n} from 'react-icons/md';\n\nimport logoImg from '../../assets/logo-mp.svg';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useTheme } from '../../hooks/theme';\n\n\n\nimport { \n    Container,\n    Header,\n    LogImg,\n    Title,\n    MenuContainer,\n    MenuItemLink,\n    MenuItemButton,\n    ToggleMenu,\n    ThemeToggleFooter,\n}  from './styles';\n\nconst Aside: React.FC = () => {\n    const { signOut } = useAuth();\n    const { toggleTheme, theme } = useTheme();\n\n    const [toggleMenuIsOpened, setToggleMenuIsOpened ] = useState(false);\n    const [darkTheme, setDarkTheme] = useState(() => theme.title === 'dark' ? true : false);\n\n\n    const handleToggleMenu = () => {\n        setToggleMenuIsOpened(!toggleMenuIsOpened);\n    }\n\n\n    const handleChangeTheme = () => {\n        setDarkTheme(!darkTheme);\n        toggleTheme();\n    }\n\n\n    return (\n        <Container menuIsOpen={toggleMenuIsOpened}>\n            <Header>\n                <ToggleMenu onClick={handleToggleMenu}>\n                { toggleMenuIsOpened ? <MdClose /> : <MdMenu /> }\n                </ToggleMenu>\n\n                <LogImg src={logoImg} alt=\"Logo Dashboard\" />\n                {/* <Title>Analytics</Title> */}\n            </Header>\n\n            <MenuContainer>\n                <MenuItemLink href=\"/\">\n                    <MdHome color=\"#2695F9\" size=\"1.4em\"/>\n                    Visão geral\n                </MenuItemLink>\n\n                <MenuItemLink href=\"/ranking\">\n                    <MdGrade color=\"#2695F9\" size=\"1.4em\" />\n                    Ranking\n                </MenuItemLink>\n\n                <MenuItemButton onClick={signOut}>\n                    <MdExitToApp color=\"#2695F9\" size=\"1.4em\" />\n                    Sair\n                </MenuItemButton>\n            </MenuContainer>\n\n            <ThemeToggleFooter menuIsOpen={toggleMenuIsOpened}>\n                <Toggle\n                    labelLeft=\"Light\"\n                    labelRight=\"Dark\"\n                    checked={darkTheme}\n                    onChange={handleChangeTheme}\n                />\n            </ThemeToggleFooter>\n        </Container>\n    );\n}\n\nexport default Aside;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    grid-area: CT;\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.grayLight};\n\n    padding: 25px;  \n\n    height: calc(100vh - 70px); \n    overflow-y: scroll;\n\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.colors.secondary};\n        border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background-color: ${props => props.theme.colors.tertiary};\n    }\n`;\n","import React from 'react';\n\nimport { Container }  from './styles';\n\nconst Content: React.FC = ({ children }) => (\n    <Container>\n        {children}\n    </Container>\n);\n\nexport default Content;","import React from 'react';\n\nimport { Grid } from './styles';\n\nimport MainHeader from '../MainHeader';\nimport Aside from '../Aside';\nimport Content from '../Content';\n\nconst Layout: React.FC = ({ children }) => (\n    <Grid>\n        <MainHeader />\n        <Aside />\n        <Content>\n            { children }\n        </Content>\n    </Grid>\n);\n\n\nexport default Layout;","export const sortArrayObjects = (key, order='asc') => {\n    return function(a, b) {\n      let varA = '';\n      let varB = '';\n\n      if(Array.isArray(key)) {\n        for(let i=0; i<key.length; i++) {\n          if(parseInt(a[key[i]]) > 0 && parseInt(a[key[i]]) < 10) {\n            a[key[i]] = '0'+parseInt(a[key[i]]);\n          }\n          if(parseInt(b[key[i]]) > 0 && parseInt(b[key[i]]) < 10) {\n            b[key[i]] = '0'+parseInt(b[key[i]]);\n          }\n          varA += (typeof a[key[i]] === 'string') ? a[key[i]].toUpperCase() : a[key[i]];\n          varB += (typeof b[key[i]] === 'string') ? b[key[i]].toUpperCase() : b[key[i]];\n        }\n      } else {\n        if(!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          return 0;\n        }\n        varA = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\n        varA = (varA ? varA : '');\n        varB = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\n        varB = (varB ? varB : '');\n      }\n\n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return (\n        (order === 'desc') ? (comparison * -1) : comparison\n      );\n    };\n  };\n\n","    import axios from 'axios';\n    import {sortArrayObjects} from '../utils/sortArrayObjects';\n    \n\n\n\n    const baseURL = 'https://script.google.com/macros/s/AKfycbyylQTbX00NZtSMDQtaa99DNqKhEwC8o6lqMwP4fjmaLF8OUazw/exec';\n    \n    export interface ITaskCompleted {\n        days: string;\n        concluded: number;\n        access: number;\n    }\n\n    export interface Task {        \n        name: string;\n        Data: string;\n        total_time: string;\n        final_score: string;\n        concluded: boolean;\n    }\n    export class Api {\n        tasks:Task[];\n\n        constructor() {\n            this.tasks = [];\n\n        }\n\n        async getData() {\n            try {\n                const server = await axios.get(baseURL);\n\n                if(server.data) {\n                    this.tasks = server.data;\n                }\n\n                // console.log('Tasks: ', this.tasks);\n            } catch (error) {\n                console.log('Error: ', error);\n                this.tasks = [];\n            }\n        }\n\n        getTasks() {\n            \n            let tasks = this.tasks.sort(sortArrayObjects(['final_score', 'name'],'desc'));\n            return this.tasks;\n\n        }\n\n        getUserTotalScore() {\n            \n            let usersScore = this.tasks.slice(0, 3).sort(sortArrayObjects(['final_score', 'name'],'desc'));\n            return usersScore;\n\n        }\n\n\n        getUserTotalTime() {            \n            let usersTime = this.tasks.slice(0, 3).sort(sortArrayObjects(['total_time', 'name'],'asc'));\n            return usersTime;\n\n        }\n\n        \n        getTotalTasks(monthSelected:number, yearSelected:number) {\n            let total: number = 0;\n\n            this.tasks.forEach(item => {\n                const date = new Date(item.Data);\n                \n\n                if(date.getTime()) {\n                    const month = date.getMonth() + 1;\n                    const year = date.getFullYear();\n\n                    if(month === monthSelected && year === yearSelected){\n                        total++;\n                    }\n                }\n            });\n\n            return total;\n        }\n\n        getTotalDurationAverage(monthSelected:number, yearSelected:number) {\n            let total: number = 0;\n            let duration: number = 0;\n            \n\n            this.tasks.forEach(item => {\n                const date = new Date(item.Data);\n\n                if(date.getTime()) {\n                    const month = date.getMonth() + 1;\n                    const year = date.getFullYear();\n\n                    if(month === monthSelected && year === yearSelected){\n                        total++;\n                        \n                        let time = item.total_time.replace(\"'\", \"\").split(':');\n                        \n                        duration += (parseInt(time[0])*60*60) + (parseInt(time[1])*60) + parseInt(time[2]);\n\n                        // console.log(\"duration\", duration);\n                        \n\n                    }\n                }\n            });\n\n            return duration / total /60;\n        }\n\n        getTotalTasks24Hours() {\n            let total: number = 0;\n\n            let today = new Date();\n            let yesterday = new Date();\n            \n            yesterday.setHours(today.getHours()-24);\n            \n            this.tasks.forEach(item => {        \n                \n                const date = new Date(item.Data)\n\n\n                // let converterLocale = new Date().toLocaleString(\"pt-BR\", {timeZone: \"America/Sao_Paulo\"});\n                // console.log('converter', converterLocale);\n                \n                    \n\n                if(date.getTime()) {\n                    // console.log('today', today);\n                    // console.log('yesterday', yesterday);\n                    // console.log('date', date);\n\n                    \n                    if(date >= yesterday && date <= today ){\n                        total ++;\n                    }\n                }\n            });\n\n            return total;\n        }\n\n        getConcludedByDayGraphic(){\n\n            let days:string[] = [];\n            let concluded:number[] = [];\n\n            this.tasks.sort(sortArrayObjects(['Data'],'asc')).forEach(item => {\n                const date = new Date (item.Data);\n                \n\n                if(date.getTime() && item.concluded) {\n                    const dateTime = item.Data.split('T');\n\n                    if (days.indexOf(dateTime[0]) == -1) {\n                        days.push(dateTime[0]);\n                    }\n\n                    // console.log('dataTime', date);\n                    \n                    // se o dia 1 estiver 0 na variável days, vai ser a mesma posição do concluded. \n                    let cont =  concluded[days.indexOf(dateTime[0])]; \n                    // retorno a mesma posição do dia \n                    concluded[days.indexOf(dateTime[0])] = cont ? cont + 1 : 1;   \n                }\n\n            });\n            \n            let completeds:ITaskCompleted[] = [];\n            days.forEach ((day, index) => {\n                completeds.push({days:day, concluded:concluded[index], access:0 });\n\n            })\n\n            return completeds;\n\n        }\n\n        getTotalConcludedFinish(){\n            let completedCount:number = 0;\n\n            this.tasks.forEach(item => {\n                if (item.concluded) {\n                    completedCount++;\n                }\n\n                // console.log('complete Count', completedCount);\n\n            });\n                \n            return completedCount;\n            \n        }\n\n        \n\n\n        getPeriodAccess() {\n            let morningNB:number = 0;\n            let afternoonNB:number = 0;\n            let nightNB:number = 0;\n            let midnightNB:number = 0;\n\n            this.tasks.forEach(item => {\n                const date = new Date(item.Data);\n                \n                if(date.getTime()) {\n                    const dateTime = item.Data.split('T');\n                    let hour = dateTime[1].toString().split(':');\n                    let hourNumber:number = parseInt(hour[0]);\n\n                    if(hourNumber >= 0 && hourNumber < 6){\n                        midnightNB++;\n                    }else if(hourNumber >= 6 && hourNumber < 12){\n                        morningNB++;\n                    }else if(hourNumber >= 12 && hourNumber < 18){\n                        afternoonNB++;\n                    }else{\n                        nightNB++;\n                    }\n                }\n            });\n\n            let periodData:number[] = [morningNB, afternoonNB, nightNB, midnightNB];\n\n            // periodData.push({morning:morningNB, afternoon:afternoonNB, night:nightNB, midnight:midnightNB});\n\n            console.log(\"perioData\", periodData);\n\n            return periodData;\n        }\n\n\n        getAccessByDayGraphic(){\n\n            let days:string[] = [];\n            let concluded:number[] = [];\n            let access:number[] = [];\n\n            this.tasks.sort(sortArrayObjects(['Data'],'asc')).forEach(item => {\n                const date = new Date (item.Data);\n                \n\n                if(date.getTime()) {\n                    const dateTime = item.Data.split('T');\n\n                    if (days.indexOf(dateTime[0]) == -1) {\n                        days.push(dateTime[0]);\n                    }\n\n                    // console.log('dataTime', date);\n                                        \n                    // retorno a mesma posição do dia \n                    if (item.concluded){\n                        // se o dia 1 estiver 0 na variável days, vai ser a mesma posição do concluded. \n                        let cont =  concluded[days.indexOf(dateTime[0])]; \n                        \n                        concluded[days.indexOf(dateTime[0])] = cont ? cont + 1 : 1;\n                    }   \n                    \n                    let contAccess =  access[days.indexOf(dateTime[0])]; \n                    access[days.indexOf(dateTime[0])] = contAccess ? contAccess + 1 : 1;\n                }\n\n            });\n            \n            let completeds:ITaskCompleted[] = [];\n            days.forEach ((day, index) => {\n                completeds.push({days:day, concluded:concluded[index], access:access[index]});\n\n            })\n\n            return completeds;\n\n        }\n        \n\n    }\n\n\n","import styled from 'styled-components';\n\ninterface ITitleContainerProps {\n    lineColor: string;\n}\n\nexport const Container = styled.div`\n    width: 100%;\n\n    display: flex;\n    justify-content: space-between;\n\n    margin-bottom: 25px;    \n\n\n    @media(max-width: 320px){\n        flex-direction: column;\n       \n    }\n`;\n\nexport const TitleContainer = styled.div<ITitleContainerProps>`\n\n    > h1 {\n        color: ${props => props.theme.colors.white};\n\n        /* &::after {\n            content: '';\n            display: block;\n            width: 55px;\n            border-bottom: 10px solid ${props => props.lineColor};\n        } */\n    }\n\n    @media(max-width: 420px){\n        > h1 {\n                font-size: 22px;\n\n                &::after {\n                content: '';\n                display: block;\n                width: 55px;\n                border-bottom: 5px solid ${props => props.lineColor};\n            }\n        }\n    }\n`;\n\nexport const Controllers = styled.div`\n    display: flex;\n\n    @media(max-width: 320px){\n        width: 100%;\n\n        justify-content: space-around;\n        \n        margin-top: 20px;       \n    }\n`;","import React from 'react';\n\nimport { \n    Container,\n    TitleContainer,\n    Controllers \n}  from './styles';\n\ninterface IContentHeaderProps {\n    title: string;\n    lineColor: string;\n    children: React.ReactNode;\n}\n\nconst ContentHeader: React.FC<IContentHeaderProps> = ({\n    title, lineColor, children\n}) => (\n    <Container>\n        <TitleContainer lineColor={lineColor}>\n            <h1>{title}</h1>                \n        </TitleContainer>\n        <Controllers>\n            {children}\n        </Controllers>\n    </Container>\n);\n\n\nexport default ContentHeader;","import styled, {keyframes} from 'styled-components';\nimport BackgroundIndicator from '../../assets/background-indicator.jpg';\n\ninterface IContainerProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0%{\n        transform: translateX(100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div<IContainerProps>`\n    width: 267px;\n    height: 98px;\n    border-radius: 15px;\n\n    margin: 10px 0;\n    font-family: Arial, Helvetica, sans-serif;\n\n\n    /* background-color: ${props => props.color}; */\n    color: ${props => props.theme.colors.black};\n\n    background-image: url(${BackgroundIndicator});\n    background-position: center;\n    background-repeat: no-repeat;\n    /* border-radius: 7px; */\n    padding: 10px 20px;\n\n    position: relative;\n    overflow: hidden;\n\n    animation: ${animate} .5s;\n\n    > img {\n        position: absolute;\n        top: 30px;\n        right: 40px;\n        height: 50%;\n\n        /* opacity: .3; */\n    }\n\n    > span {\n        font-size: 14px;\n        width: 100px;\n        position: absolute;\n        margin: 0px;\n        line-height:1.3;\n        left: 35px;\n        top: 15px;\n\n    }\n\n    > small {\n        font-size: 12px;\n        position: absolute;\n        bottom: 10px;\n\n    }\n\n    > h1 {\n        font-size: 21px;\n        position: absolute;\n        top: 60px;\n        left: 35px;\n        font-weight:bold;\n    }\n\n    > h3 {\n        font-size: 14px;\n        position:absolute;\n        bottom:8px;\n        left: 80px;\n\n    }\n\n\n\n    @media(max-width: 770px){\n        > span {\n            font-size: 10px;\n        }\n\n        > h1 {\n            word-wrap: break-word;\n            font-size: 22px;\n\n            strong {\n                display: inline-block;\n                width: 100%;\n                font-size: 16px;\n            }\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n\n        > h1 {\n            display: flex;\n\n            strong {\n                position: initial;\n                width: auto;\n                font-size: 22px;\n            }\n\n            strong:after {\n                display: inline-block;\n                content: '';\n                width: 1px;\n            }\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport dolarImg from '../../assets/total-acessos.svg';\nimport arrowUpImg from '../../assets/acessos-horas.svg';\nimport arrowDownImg from '../../assets/conclusao.svg';\nimport TimeImg from '../../assets/media.svg';\n\n\nimport { Container }  from './styles';\n\ninterface IIndicatorBoxProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    icon: 'dolar' | 'arrowUp' | 'arrowDown' | 'Time';\n    color: string;\n    text: string;\n}\n\nconst IndicatorBox: React.FC<IIndicatorBoxProps> = ({\n    title,\n    amount,\n    footerlabel,\n    icon,\n    color,\n    text\n}) => {\n\n    const iconSelected = useMemo(() => {\n        switch (icon) {\n            case 'dolar':\n                return dolarImg;\n            case 'arrowUp': \n                return arrowUpImg;\n            case 'arrowDown':\n                return arrowDownImg;\n            case 'Time':\n                return TimeImg;\n            default:\n              return undefined;\n        }\n    },[icon]);\n\n    return (\n        <Container color={color}>\n            <span>{title}</span>\n            <h1>\n                <strong></strong>\n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={0}    \n                             \n                />\n            </h1>\n            \n            <small>{footerlabel}</small>\n            <img src={iconSelected} alt={title} />\n            <h3> {text} </h3>\n        </Container>\n    );\n}\n\nexport default IndicatorBox;","import styled, {keyframes} from 'styled-components';\nimport BackgroundIndicator from '../../assets/background-indicator.jpg';\n\ninterface IContainerProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0%{\n        transform: translateX(100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div<IContainerProps>`\n    width: 267px;\n    height: 98px;\n    border-radius: 15px;\n\n    margin: 10px 0;\n    font-family: Arial, Helvetica, sans-serif;\n\n\n    /* background-color: ${props => props.color}; */\n    color: ${props => props.theme.colors.black};\n\n    background-image: url(${BackgroundIndicator});\n    background-position: center;\n    background-repeat: no-repeat;\n    /* border-radius: 7px; */\n    padding: 10px 20px;\n\n    position: relative;\n    overflow: hidden;\n\n    animation: ${animate} .5s;\n\n\n\n    > img {\n        position: absolute;\n        top: 30px;\n        right: 40px;\n        height: 50%;\n\n        /* opacity: .3; */\n    }\n\n    > span {\n        font-size: 14px;\n        width: 120px;\n        position: absolute;\n        margin: 0px;\n        line-height:1.3;\n        left: 35px;\n        top: 15px;\n\n    }\n\n    > small {\n        font-size: 12px;\n        position: absolute;\n        bottom: 10px;\n\n    }\n\n    > h1 {\n        font-size: 21px;\n        position: absolute;\n        top: 60px;\n        left: 35px;\n        font-weight:bold;\n    }\n\n    > h3 {\n        font-size: 14px;\n        position:absolute;\n        bottom:8px;\n        left: 50px;\n\n    }\n\n\n\n    @media(max-width: 770px){\n        > span {\n            font-size: 10px;\n        }\n\n        > h1 {\n            word-wrap: break-word;\n            font-size: 22px;\n\n            strong {\n                display: inline-block;\n                width: 100%;\n                font-size: 16px;\n            }\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n\n        > h1 {\n            display: flex;\n\n            strong {\n                position: initial;\n                width: auto;\n                font-size: 22px;\n            }\n\n            strong:after {\n                display: inline-block;\n                content: '';\n                width: 1px;\n            }\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport dolarImg from '../../assets/total-acessos.svg';\nimport arrowUpImg from '../../assets/acessos-horas.svg';\nimport arrowDownImg from '../../assets/conclusao.svg';\nimport TimeImg from '../../assets/media.svg';\n\n\nimport { Container }  from './styles';\n\ninterface IIndicatorBoxProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    icon: 'dolar' | 'arrowUp' | 'arrowDown' | 'Time';\n    color: string;\n    text: string;\n}\n\nconst IndicatorBox: React.FC<IIndicatorBoxProps> = ({\n    title,\n    amount,\n    footerlabel,\n    icon,\n    color,\n    text\n}) => {\n\n    const iconSelected = useMemo(() => {\n        switch (icon) {\n            case 'dolar':\n                return dolarImg;\n            case 'arrowUp': \n                return arrowUpImg;\n            case 'arrowDown':\n                return arrowDownImg;\n            case 'Time':\n                return TimeImg;\n            default:\n              return undefined;\n        }\n    },[icon]);\n\n    return (\n        <Container color={color}>\n            <span>Total <br/>de acessos</span>\n            <h1>                \n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={0}    \n                             \n                />\n            </h1>\n            \n            <small>{footerlabel}</small>\n            <img src={iconSelected} alt={title} />\n            <h3> {text} </h3>\n        </Container>\n    );\n}\n\nexport default IndicatorBox;","import styled, {keyframes} from 'styled-components';\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 49%;\n    height: 420px;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    border-radius: 7px;\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    animation: ${animate} .5s;\n\n    > span {\n        font-size:14px;\n        color: ${props => props.theme.colors.titleForm};\n        text-align:center;\n        font-weight:bold;\n    }\n\n    > header img {\n        width: 35px;\n        margin-left: 7px;\n    }\n\n    > header p {\n        font-size: 18px;\n    }\n\n    @media(max-width: 770px){\n        width: 100%;\n        \n        > header h1 {\n            font-size: 24px;\n\n            img {\n                height: 20px;\n                width: 20px;\n            }\n        }\n\n        > header p, > footer span {\n            font-size: 14px;\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n        height: auto;\n\n        > header p {\n            margin-bottom: 15px;\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nimport { Container }  from './styles';\n\n\n\ninterface IBoxAccessPeriodProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    color: string;\n    period: number[];\n}\n\n\n\nconst BoxAccessPeriod: React.FC<IBoxAccessPeriodProps> = ({\n    title,\n    amount,\n    footerlabel,\n    color,\n    period\n}) => {\n\n  const data = {\n    labels: ['Manhã', 'Tarde', 'Noite', 'Madrugada'],\n    datasets: [\n      {\n        label: '',        \n        data: period,\n        backgroundColor: [\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(54, 162, 235, 1)',\n          \n        ],\n        borderWidth: 1,\n        \n      },\n    ],\n  }\n  \n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n    },\n  }\n    return (\n\n      \n        <Container color={color}>\n            <span>{title}</span>\n            <h1>\n                <strong></strong>\n                {/* <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={2}                                    \n                /> */}                  \n\n            </h1>\n                \n            <>                       \n              <HorizontalBar \n                data={data} \n                options={options} \n                // width={100}\n                // height={50}\n                \n                />\n            </>\n            \n        </Container>\n    );\n}\n\nexport default BoxAccessPeriod;","import styled, {keyframes} from 'styled-components';\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 49%;\n    height: 420px;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    border-radius: 7px;\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    animation: ${animate} .5s;\n\n    > span {\n        font-size: 14px;\n        text-align: center;\n        font-weight: bold;\n        color: ${props => props.theme.colors.titleForm};\n    }\n\n    > header img {\n        width: 35px;\n        margin-left: 7px;\n    }\n\n    > header p {\n        font-size: 18px;\n    }\n\n    \n\n    @media(max-width: 770px){\n        width: 100%;\n        \n        > header h1 {\n            font-size: 24px;\n\n            img {\n                height: 20px;\n                width: 20px;\n            }\n        }\n\n        > header p, > footer span {\n            font-size: 14px;\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n        height: auto;\n\n        > header p {\n            margin-bottom: 15px;\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport { Pie } from \"react-chartjs-2\";\n\n\nimport { Container }  from './styles';\n\n\nconst data = {\n    labels: ['Acertos'],\n    datasets: [\n      {\n        label: '',\n        data: [80, 20],\n        backgroundColor: [\n          'rgba(153, 102, 255, 1)',\n          \n        ],\n        borderColor: [\n          'rgba(153, 102, 255, 1)',\n          \n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n  \n\n\n\ninterface IBoxActiveEvolutionProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    color: string;\n}\n\nconst BoxActiveEvolution: React.FC<IBoxActiveEvolutionProps> = ({\n    title,\n    amount,\n    footerlabel,\n    color\n}) => {\n\n   \n\n    return (\n        <Container color={color}>\n            {/* <span>{title}</span>\n            <h1>\n                <strong></strong>\n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={2}                                    \n                />\n            </h1>\n            <small>{footerlabel}</small> */}\n\n            <span>{title}</span>\n            \n            <>\n                <Pie data={data} options={{ maintainAspectRatio: true }}/>\n            </>\n            \n\n\n        </Container>\n    );\n}\n\nexport default BoxActiveEvolution;","import styled, {keyframes} from 'styled-components';\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 49%;\n    height: 420px;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    border-radius: 7px;\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    animation: ${animate} .5s;\n\n    > span {\n        font-size:14px;\n        color: ${props => props.theme.colors.titleForm};\n        text-align: center;\n        font-weight: bold;\n    }\n\n    > header img {\n        width: 35px;\n        margin-left: 7px;\n    }\n\n    > header p {\n        font-size: 18px;\n    }\n\n    @media(max-width: 770px){\n        width: 100%;\n        \n        > header h1 {\n            font-size: 24px;\n\n            img {\n                height: 20px;\n                width: 20px;\n            }\n        }\n\n        > header p, > footer span {\n            font-size: 14px;\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n        height: auto;\n\n        > header p {\n            margin-bottom: 15px;\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport { Bar } from \"react-chartjs-2\";\n\nimport { Container }  from './styles';\n\ninterface IBoxAccessPeriodProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    color: string;\n}\n\n\nconst data = {\n  labels: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\n  datasets: [\n    {\n      label: '',\n      data: [9, 90, 81, 74, 99, 70, 41],\n      backgroundColor: [\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n      ],\n      borderColor: [\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(54, 162, 235, 1)',\n      ],\n      borderWidth: 1\n      \n    },\n  ],\n}\n  \nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\n\n\n\n\nconst BoxAccessPeriod: React.FC<IBoxAccessPeriodProps> = ({\n    title,\n    amount,\n    footerlabel,\n    color\n}) => {\n    return (\n        <Container color={color}>\n            <span>{title}</span>\n            \n\n            <>                \n              <Bar data={data} options={options} />\n            </>\n            <small>{footerlabel}</small>\n        </Container>\n    );\n}\n\nexport default BoxAccessPeriod;","import styled, {keyframes} from 'styled-components';\nimport BackgroundIndicator from '../../assets/background-indicator.jpg';\n\ninterface IContainerProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0%{\n        transform: translateX(100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div<IContainerProps>`\n    width: 267px;\n    height: 98px;\n    border-radius: 15px;\n\n    margin: 10px 0;\n    font-family: Arial, Helvetica, sans-serif;\n\n\n    /* background-color: ${props => props.color}; */\n    color: ${props => props.theme.colors.black};\n\n    background-image: url(${BackgroundIndicator});\n    background-position: center;\n    background-repeat: no-repeat;\n    /* border-radius: 7px; */\n    padding: 10px 20px;\n\n    position: relative;\n    overflow: hidden;\n\n    animation: ${animate} .5s;\n\n    > img {\n        position: absolute;\n        top: 30px;\n        right: 40px;\n        height: 50%;\n\n        /* opacity: .3; */\n    }\n\n    > span {\n        font-size: 14px;\n        width: 120px;\n        position: absolute;\n        margin: 0px;\n        line-height:1.3;\n        left: 35px;\n        top: 29px;\n\n    }\n\n    > small {\n        font-size: 12px;\n        position: absolute;\n        bottom: 10px;\n\n    }\n\n    > h1 {\n        font-size: 21px;\n        position: absolute;\n        top: 60px;\n        left: 35px;\n        font-weight:bold;\n    }\n\n    > h3 {\n        font-size: 14px;\n        position:absolute;\n        bottom:8px;\n        left: 50px;\n\n    }\n\n\n\n    @media(max-width: 770px){\n        > span {\n            font-size: 10px;\n        }\n\n        > h1 {\n            word-wrap: break-word;\n            font-size: 22px;\n\n            strong {\n                display: inline-block;\n                width: 100%;\n                font-size: 16px;\n            }\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n\n        > h1 {\n            display: flex;\n\n            strong {\n                position: initial;\n                width: auto;\n                font-size: 22px;\n            }\n\n            strong:after {\n                display: inline-block;\n                content: '';\n                width: 1px;\n            }\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport dolarImg from '../../assets/total-acessos.svg';\nimport arrowUpImg from '../../assets/acessos-horas.svg';\nimport arrowDownImg from '../../assets/conclusao.svg';\nimport TimeImg from '../../assets/media.svg';\n\n\nimport { Container }  from './styles';\n\ninterface IIndicatorBoxProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    icon: 'dolar' | 'arrowUp' | 'arrowDown' | 'Time';\n    color: string;\n    text: string;\n}\n\nconst IndicatorBox: React.FC<IIndicatorBoxProps> = ({\n    title,\n    amount,\n    footerlabel,\n    icon,\n    color,\n    text\n}) => {\n\n    const iconSelected = useMemo(() => {\n        switch (icon) {\n            case 'dolar':\n                return dolarImg;\n            case 'arrowUp': \n                return arrowUpImg;\n            case 'arrowDown':\n                return arrowDownImg;\n            case 'Time':\n                return TimeImg;\n            default:\n              return undefined;\n        }\n    },[icon]);\n\n    return (\n        <Container color={color}>\n            <span>Acessos / 24h </span>\n            <h1>                \n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={0}    \n                             \n                />\n            </h1>\n            \n            <small>{footerlabel}</small>\n            <img src={iconSelected} alt={title} />\n            <h3> {text} </h3>\n        </Container>\n    );\n}\n\nexport default IndicatorBox;","import styled, {keyframes} from 'styled-components';\nimport BackgroundIndicator from '../../assets/background-indicator.jpg';\n\ninterface IContainerProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0%{\n        transform: translateX(100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div<IContainerProps>`\n    width: 267px;\n    height: 98px;\n    border-radius: 15px;\n\n    margin: 10px 0;\n    font-family: Arial, Helvetica, sans-serif;\n\n\n    /* background-color: ${props => props.color}; */\n    color: ${props => props.theme.colors.black};\n\n    background-image: url(${BackgroundIndicator});\n    background-position: center;\n    background-repeat: no-repeat;\n    /* border-radius: 7px; */\n    padding: 10px 20px;\n\n    position: relative;\n    overflow: hidden;\n\n    animation: ${animate} .5s;\n\n    > img {\n        position: absolute;\n        top: 30px;\n        right: 40px;\n        height: 50%;\n\n        /* opacity: .3; */\n    }\n\n    > span {\n        font-size: 14px;\n        width: 120px;\n        position: absolute;\n        margin: 0px;\n        line-height:1.3;\n        left: 35px;\n        top: 15px;\n\n    }\n\n    > small {\n        font-size: 12px;\n        position: absolute;\n        bottom: 10px;\n\n    }\n\n    > h1 {\n        font-size: 21px;\n        position: absolute;\n        top: 60px;\n        left: 35px;\n        font-weight:bold;\n    }\n\n    > h3 {\n        font-size: 14px;\n        position:absolute;\n        bottom:8px;\n        left: 50px;\n\n    }\n\n\n\n    @media(max-width: 770px){\n        > span {\n            font-size: 10px;\n        }\n\n        > h1 {\n            word-wrap: break-word;\n            font-size: 22px;\n\n            strong {\n                display: inline-block;\n                width: 100%;\n                font-size: 16px;\n            }\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n\n        > h1 {\n            display: flex;\n\n            strong {\n                position: initial;\n                width: auto;\n                font-size: 22px;\n            }\n\n            strong:after {\n                display: inline-block;\n                content: '';\n                width: 1px;\n            }\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport dolarImg from '../../assets/total-acessos.svg';\nimport arrowUpImg from '../../assets/acessos-horas.svg';\nimport arrowDownImg from '../../assets/conclusao.svg';\nimport TimeImg from '../../assets/media.svg';\n\n\nimport { Container }  from './styles';\n\ninterface IIndicatorBoxProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    icon: 'dolar' | 'arrowUp' | 'arrowDown' | 'Time';\n    color: string;\n    text: string;\n}\n\nconst IndicatorBox: React.FC<IIndicatorBoxProps> = ({\n    title, \n    amount,\n    footerlabel,\n    icon,\n    color,\n    text\n}) => {\n\n    const iconSelected = useMemo(() => {\n        switch (icon) {\n            case 'dolar':\n                return dolarImg;\n            case 'arrowUp': \n                return arrowUpImg;\n            case 'arrowDown':\n                return arrowDownImg;\n            case 'Time':\n                return TimeImg;\n            default:\n              return undefined;\n        }\n    },[icon]);\n\n    return (\n        <Container color={color}>\n            <span>Total de conclusões</span>\n            <h1>                \n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={0}    \n                             \n                />\n            </h1>\n            \n            <small>{footerlabel}</small>\n            <img src={iconSelected} alt={title} />\n            <h3> {text} </h3>\n        </Container>\n    );\n}\n\nexport default IndicatorBox;","import styled, {keyframes} from 'styled-components';\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 49%;\n    height: 420px;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    border-radius: 7px;\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    animation: ${animate} .5s;\n\n    > span {\n        font-size: 14px;\n        text-align: center;\n        font-weight: bold;\n        color: ${props => props.theme.colors.titleForm};\n    }\n\n    > header img {\n        width: 35px;\n        margin-left: 7px;\n    }\n\n    > header p {\n        font-size: 18px;\n    }\n\n    \n\n    @media(max-width: 770px){\n        width: 100%;\n        \n        > header h1 {\n            font-size: 24px;\n\n            img {\n                height: 20px;\n                width: 20px;\n            }\n        }\n\n        > header p, > footer span {\n            font-size: 14px;\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n        height: auto;\n\n        > header p {\n            margin-bottom: 15px;\n        }\n    }\n`;","import React, { useMemo } from 'react';\nimport CountUp from 'react-countup';\n\nimport { Pie } from \"react-chartjs-2\";\n\n\nimport { Container }  from './styles';\n\n\nconst data = {\n    labels: ['Desktop'],\n    datasets: [\n      {\n        label: '',\n        data: [100, 0],\n        backgroundColor: [\n          'rgba(54, 162, 235, 1)',\n          \n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 1)',\n          \n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n  \n\n\n\ninterface IBoxActiveEvolutionProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    color: string;\n}\n\nconst BoxActiveEvolution: React.FC<IBoxActiveEvolutionProps> = ({\n    title,\n    amount,\n    footerlabel,\n    color\n}) => {\n\n   \n\n    return (\n        <Container color={color}>\n            {/* <span>{title}</span>\n            <h1>\n                <strong></strong>\n                <CountUp \n                    end={amount}\n                    separator=\".\"\n                    decimal=\",\"\n                    decimals={2}                                    \n                />\n            </h1>\n            <small>{footerlabel}</small> */}\n\n            <span>{title}</span>\n            \n            <>\n                <Pie data={data} options={{ maintainAspectRatio: true }} />\n            </>\n            \n\n\n        </Container>\n    );\n}\n\nexport default BoxActiveEvolution;","import styled, {keyframes} from 'styled-components';\n\ninterface ILegendProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    border-radius: 7px;\n\n    animation: ${animate} .5s;\n`;\n\nexport const ChartContainer = styled.div`\n     flex: 1;\n     height: 260px;    \n`;\n\nexport const Header = styled.header`\n    width: 100%;\n   \n    display: flex;\n    justify-content: space-between;\n\n    \n    > h2 {\n        margin: 0 auto;\n        position: relative;\n        font-size: 14px;\n        text-align: center;\n        font-weight: bold;\n        margin-bottom: 23px;\n\n        color: ${props => props.theme.colors.titleForm};\n\n    }\n\n\n    @media(max-width: 1200px){\n        flex-direction: column;\n    }\n`;\n\nexport const LegendContainer = styled.ul`\n    list-style: none;\n    \n    display: flex;\n    padding-right: 16px;\n`;\n\nexport const Legend = styled.li<ILegendProps>`\n    display: flex;\n    align-items: center;    \n\n    margin-bottom: 7px;    \n    margin-left: 16px;    \n\n    > div {\n        background-color: ${props => props.color};\n\n        width: 40px;\n        height: 40px;\n        border-radius: 5px;\n        \n        font-size: 14px;        \n        line-height: 40px;\n        text-align: center;\n    }\n\n    > span {\n        margin-left: 5px;\n    }\n\n\n    \n    @media(max-width: 1280px){\n        > div {\n            width: 30px;\n            height: 30px;\n        }\n    }\n`;","import React from 'react';\nimport {ITaskCompleted} from '../../services/api';\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n} from 'recharts';\n\nimport formatCurrency from '../../utils/formatCurrency';\n\nimport { \n    Container, \n    ChartContainer,\n    Header,\n    LegendContainer,\n    Legend,\n}  from './styles';\n\n\ninterface IHistoryBoxProps {\n    data: ITaskCompleted[],\n    lineColorAmountEntry: string;\n    \n}\n\nconst HistoryBox: React.FC<IHistoryBoxProps> = ({\n    data, lineColorAmountEntry\n}) => (\n    <Container>\n        <Header>\n            <h2>Quantidade de conclusões por dia</h2>\n\n            <LegendContainer>\n                {/* <Legend color={lineColorAmountEntry}>\n                    <div></div>\n                    <span>Concluídos</span>\n                </Legend>\n           \n                <Legend color={lineColorAmountOutput}>\n                    <div></div>\n                    <span>Pendentes</span>\n                </Legend> */}\n            </LegendContainer>\n        </Header>\n\n        <ChartContainer>\n            <ResponsiveContainer>\n                <LineChart data={data} margin={{ top: 5, right: 20, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#cecece\" />\n                    <XAxis dataKey=\"days\" stroke=\"#cecece\" />\n                    <Tooltip formatter={(value) => value} />\n                    <Line \n                        type=\"monotone\"                \n                        dataKey=\"concluded\"\n                        name=\"Conclusões\"\n                        stroke={lineColorAmountEntry}\n                        strokeWidth={5}\n                        dot={{ r: 5}}\n                        activeDot={{ r: 8}}\n                    />\n\n\n                    \n                    \n                </LineChart>\n            </ResponsiveContainer>\n        </ChartContainer>\n    </Container>\n)\n\nexport default HistoryBox;","import styled, {keyframes} from 'styled-components';\n\ninterface ILegendProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0% {\n        transform: translateX(-100px);\n        opacity: 0;\n    }\n    50%{\n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\nexport const Container = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n\n    background-color: ${props => props.theme.colors.tertiary};\n    color: ${props => props.theme.colors.white};\n\n    margin: 10px 0;\n    padding: 30px 20px;\n\n    border-radius: 7px;\n\n    animation: ${animate} .5s;\n`;\n\nexport const ChartContainer = styled.div`\n     flex: 1;\n     height: 260px;    \n`;\n\nexport const Header = styled.header`\n    width: 100%;\n   \n    display: flex;\n    justify-content: space-between;\n\n    > h2 {\n\n        margin: 0 auto;\n        position: relative;\n        font-size: 14px;\n        text-align: center;\n        font-weight: bold;\n        margin-bottom: 23px;\n    \n        color: ${props => props.theme.colors.titleForm};\n\n    }\n\n\n    @media(max-width: 1200px){\n        flex-direction: column;\n    }\n`;\n\nexport const LegendContainer = styled.ul`\n    list-style: none;\n    \n    display: flex;\n    padding-right: 16px;\n`;\n\nexport const Legend = styled.li<ILegendProps>`\n    display: flex;\n    align-items: center;    \n\n    margin-bottom: 7px;    \n    margin-left: 16px;    \n\n    > div {\n        background-color: ${props => props.color};\n\n        width: 40px;\n        height: 40px;\n        border-radius: 5px;\n        \n        font-size: 14px;        \n        line-height: 40px;\n        text-align: center;\n    }\n\n    > span {\n        margin-left: 5px;\n    }\n\n\n    \n    @media(max-width: 1280px){\n        > div {\n            width: 30px;\n            height: 30px;\n        }\n    }\n`;","import React from 'react';\nimport {ITaskCompleted} from '../../services/api';\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n} from 'recharts';\n\nimport formatCurrency from '../../utils/formatCurrency';\n\nimport { \n    Container, \n    ChartContainer,\n    Header,\n    LegendContainer,\n    Legend,\n}  from './styles';\n\n\ninterface IHistoryConcludedProps {\n    data: ITaskCompleted[],\n    \n    lineColorAmountEntry: string;\n    lineColorAccess: string;\n    \n}\n\nconst HistoryConcluded: React.FC<IHistoryConcludedProps> = ({\n    data, lineColorAmountEntry, lineColorAccess\n}) => (\n    <Container>\n        <Header>\n            <h2>Acessos x Conclusões por dia</h2>\n\n            <LegendContainer>\n                {/* <Legend color={lineColorAmountEntry}>\n                    <div></div>\n                    <span>Concluídos</span>\n                </Legend>\n           \n                <Legend color={lineColorAmountOutput}>\n                    <div></div>\n                    <span>Pendentes</span>\n                </Legend> */}\n            </LegendContainer>\n        </Header>\n\n        <ChartContainer>\n            <ResponsiveContainer>\n                <LineChart data={data} margin={{ top: 5, right: 20, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#cecece\" />\n                    <XAxis dataKey=\"days\" stroke=\"#cecece\" />\n                    <Tooltip formatter={(value) => value} />\n                    <Line \n                        type=\"monotone\"                \n                        dataKey=\"concluded\"\n                        name=\"Conclusões\"\n                        stroke={lineColorAmountEntry}\n                        strokeWidth={5}\n                        dot={{ r: 5}}\n                        activeDot={{ r: 8}}\n                    />\n\n                    <Line \n                        type=\"monotone\"                \n                        dataKey=\"access\"\n                        name=\"Acessos\"\n                        stroke={lineColorAccess}\n                        strokeWidth={5}\n                        dot={{ r: 5}}\n                        activeDot={{ r: 8}}\n                    />\n\n                </LineChart>                \n                    \n                \n            </ResponsiveContainer>\n        </ChartContainer>\n    </Container>\n)\n\nexport default HistoryConcluded;","export default [\n  {\"amount\":\"330.00\", \"date\":\"2021-02-10\"},\n  {\"amount\": \"1300.52\", \"date\": \"2021-03-01\" }\n  \n]","export default [\n  {\"amount\": \"1300.52\", \"date\": \"2020-01-10\" },\n  {\"amount\": \"1300.52\", \"date\": \"2021-03-01\" }\n  \n  ]\n  ","export default [\n    'Janeiro',\n    'Fevereiro',\n    'Março',\n    'Abril',\n    'Maio',\n    'Junho',\n    'Julho',\n    'Agosto',\n    'Setembro',\n    'Outubro',\n    'Novembro',\n    'Dezembro'\n];","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Content = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`;\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport {Api, Task, ITaskCompleted} from '../../services/api';\n\nimport ContentHeader from '../../components/ContentHeader';\nimport SelectInput from '../../components/SelectInput';\n\nimport BoxAverageAccess from '../../components/BoxAverageAccess';\nimport BoxTotalAccess from '../../components/BoxTotalAccess';\nimport BoxAccessPeriod from '../../components/BoxAccessPeriod';\nimport BoxActiveEvolution from '../../components/BoxActiveEvolution';\nimport BoxAccessDayWeek from '../../components/BoxAccessDayWeek';\nimport BoxAccessLastHours from '../../components/BoxAccessLastHours';\nimport BoxTotalConclusion from '../../components/BoxTotalConclusion';\nimport BoxAccessDevices from '../../components/BoxAccessDevices';\n\n\nimport PieChartBoxDevices from '../../components/PieChartBoxDevices';\nimport PieChartBoxDay from '../../components/PieChartBoxDay';\n\nimport HistoryBox from '../../components/HistoryAccessDay';\nimport HistoryConcludedDay from '../../components/HistoryConcludedDay'\n\nimport expenses from '../../services/expenses';\nimport gains from '../../services/gains';\n\nimport listOfMonths from '../../utils/months';\n\n\n\nimport { \n    Container,\n    Content, \n} from './styles';\n\nvar api:Api;\n\nconst Dashboard: React.FC = (): JSX.Element => {\n    const [monthSelected, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\n    const [yearSelected, setYearSelected] = useState<number>(new Date().getFullYear());\n    const [totalExpenses, setTotalExpenses] = useState<number>(0);\n    const [totalBalance, setTotalBalance] = useState<number>(0);\n    const [totalGains, setTotalGains] = useState<number>(0);\n    const [totalDuration, setTotalDuration] = useState<number>(0);\n    \n    const [totalConcluded, setTotalConcluded] = useState<ITaskCompleted[]>([]);\n    const [totalAccess, setTotalAccess] = useState<ITaskCompleted[]>([]);    \n    \n    const [totalConcludedFinish, setTotalConcludedFinish] = useState<number>(0);\n    const [totalPeriod, setPeriodAccess] = useState<number[]>([]);\n\n\n    \n\n\n    useEffect(() => {\n      loadApi();\n    }, []);\n\n    useEffect(() => {\n      loadData();\n    }, [monthSelected, yearSelected]);\n  \n    async function loadApi() {\n      api = new Api();\n      await api.getData();\n      loadData();\n    }\n  \n    function loadData() {\n        setTotalBalance(api.getTotalTasks(monthSelected, yearSelected));\n        setTotalGains(api.getTotalTasks24Hours());\n        setTotalDuration(api.getTotalDurationAverage(monthSelected, yearSelected));\n        \n        setTotalConcluded(api.getConcludedByDayGraphic());\n        setTotalAccess(api.getAccessByDayGraphic());\n        \n        setTotalConcludedFinish(api.getTotalConcludedFinish());\n        \n        setPeriodAccess(api.getPeriodAccess());\n    }\n\n    const years = useMemo(() => {\n        let uniqueYears: number[] = [];\n\n        [...expenses, ...gains].forEach(item => {\n            const date = new Date(item.date);\n            const year = date.getFullYear();\n\n            if(!uniqueYears.includes(year)){\n                uniqueYears.push(year)\n           }\n        });\n\n        return uniqueYears.map(year => {\n            return {\n                value: year,\n                label: year,\n            }\n        });\n    },[]);\n\n\n    const months = useMemo(() => {\n        return listOfMonths.map((month, index) => {\n            return {\n                value: index + 1,\n                label: month,\n            }\n        });\n    },[]);\n\n    \n\n    const relationExpensesVersusGains = useMemo(() => {\n        const total = totalGains + totalExpenses;\n\n        const percentGains = Number(((totalGains / total) * 100).toFixed(1));\n        const percentExpenses = Number(((totalExpenses / total) * 100).toFixed(1));\n\n        const data = [\n            {\n                name: \"Desktop\",\n                value: totalGains,\n                percent: percentGains ? percentGains : 0, \n                color: '#2695F9'\n            },\n            {\n                name: \"Mobile\",\n                value: totalExpenses,\n                percent: percentExpenses ? percentExpenses : 0, \n                color: '#8800FF'\n            },\n        ];\n\n        return data;\n    },[totalGains, totalExpenses]);\n\n    const historyData = useMemo(() => {\n        return listOfMonths.map((_, month) => {\n            \n            let amountEntry = 0;\n            gains.forEach(gain => {\n                const date = new Date(gain.date);\n                const gainMonth = date.getMonth();\n                const gainYear = date.getFullYear();\n\n                if(gainMonth === month && gainYear === yearSelected){\n                    try{\n                        amountEntry += Number(gain.amount);\n                    }catch{\n                        throw new Error('amountEntry is invalid. amountEntry must be valid number.')\n                    }\n                }\n            });\n\n            let amountOutput = 0;\n            expenses.forEach(expense => {\n                const date = new Date(expense.date);\n                const expenseMonth = date.getMonth();\n                const expenseYear = date.getFullYear();\n\n                if(expenseMonth === month && expenseYear === yearSelected){\n                    try{\n                        amountOutput += Number(expense.amount);\n                    }catch{\n                        throw new Error('amountOutput is invalid. amountOutput must be valid number.')\n                    }\n                }\n            });\n\n\n            return {\n                monthNumber: month,\n                month: listOfMonths[month].substr(0, 3),\n                amountEntry,\n                amountOutput\n            }\n        })\n        .filter(item => {\n            const currentMonth = new Date().getMonth();\n            const currentYear = new Date().getFullYear();\n            return (yearSelected === currentYear && item.monthNumber <= currentMonth) || (yearSelected < currentYear)\n        });\n    },[yearSelected]);\n\n    \n\n\n    \n\n    const handleMonthSelected = useCallback((month: string) => {\n        try {\n            const parseMonth = Number(month);\n            setMonthSelected(parseMonth);\n        }\n        catch{\n            throw new Error('invalid month value. Is accept 0 - 24.')\n        }\n    },[]);\n\n\n    const handleYearSelected = useCallback((year: string) => {\n        try {\n            const parseYear = Number(year);\n            setYearSelected(parseYear);\n        }\n        catch{\n            throw new Error('invalid year value. Is accept integer numbers.')\n        }\n    },[]);\n\n\n    return (\n        <Container>\n            <ContentHeader title=\"\" lineColor=\"#2695F9\">\n                {/* <SelectInput \n                    options={months}\n                    onChange={(e) => handleMonthSelected(e.target.value)} \n                    defaultValue={monthSelected}\n                />\n                <SelectInput \n                    options={years} \n                    onChange={(e) => handleYearSelected(e.target.value)} \n                    defaultValue={yearSelected}\n                /> */}\n            </ContentHeader>\n\n            <Content>\n                <BoxTotalAccess \n                    title=\"Total de acessos\"\n                    color=\"#2695F9\"\n                    amount={totalBalance}\n                    footerlabel=\"\"\n                    icon=\"dolar\"\n                    text=\" \"\n                />\n\n                <BoxAccessLastHours \n                    title=\"Acessos 24horas\"\n                    color=\"#2695F9\"\n                    amount={totalGains}\n                    footerlabel=\"\"\n                    icon=\"arrowUp\"\n                    text=\" \"\n                />\n\n                <BoxTotalConclusion \n                    title=\"Total de conclusões\"\n                    color=\"#2695F9\"\n                    amount={totalConcludedFinish}\n                    footerlabel=\"\"\n                    icon=\"arrowDown\"\n                    text=\" \"\n                />\n\n\n                <BoxAverageAccess \n                    title=\"Duração acesso / média\"\n                    color=\"#2695F9\"\n                    amount={totalDuration}\n                    footerlabel=\"\"\n                    icon=\"Time\"\n                    text=\"minutos\"\n                />\n\n                {/* init indicator */}\n\n                \n                \n                <BoxAccessPeriod \n                    title=\"Acessos por período\"\n                    amount={0}\n                    footerlabel=\"\"\n                    color=\"#2695F9\"\n                    period = {totalPeriod}\n                    \n                    // icon=\"arrowUp\"\n                />\n\n                {/* <PieChartBoxDay data={relationExpensesVersusGains} /> */}\n\n                <BoxAccessDayWeek \n                    title=\"Acessos por dias da semana\"\n                    color=\"#2695F9\"\n                    amount={totalGains}\n                    footerlabel=\"\"\n                    // icon=\"arrowUp\"\n                />\n                \n                \n                <BoxActiveEvolution \n                    title=\"% Acertos atividades e avaliações\"\n                    color=\"#2695F9\"\n                    amount={totalGains}\n                    footerlabel=\"\"\n                    // icon=\"dolar\"\n                    \n                />\n\n\n\n                <BoxAccessDevices \n                    title=\"Acesso por device\"\n                    color=\"#2695F9\"\n                    amount={totalGains}\n                    footerlabel=\"\"\n                    // icon=\"dolar\"\n                    \n                />\n\n\n                <HistoryBox \n                    data={totalConcluded} \n                    lineColorAmountEntry=\"#3399FF\"                    \n                />\n\n                \n                <HistoryConcludedDay \n                    data={totalAccess} \n                    lineColorAmountEntry=\"#8800FF\"\n                    lineColorAccess=\"#3399FF\"                    \n                    \n                />\n                \n            </Content>\n        </Container>\n    );\n}\n\nexport default Dashboard;","const formatDateTime = (date: string): string => {\n    const dateFormatted = new Date(date);\n    const year = dateFormatted.getFullYear();\n    \n    const second = dateFormatted.getSeconds() > 9 \n    ? dateFormatted.getSeconds() : `0${dateFormatted.getSeconds()}`;\n        \n    const minute = dateFormatted.getMinutes() > 9 \n    ? dateFormatted.getMinutes() : `0${dateFormatted.getMinutes()}`;\n\n    const hour = dateFormatted.getHours() > 9 \n    ? dateFormatted.getHours() : `0${dateFormatted.getHours()}`;\n\n    const day = dateFormatted.getDate() > 9 \n    ? dateFormatted.getDate() : `0${dateFormatted.getDate()}`;\n    \n    const month = dateFormatted.getMonth() + 1 > 9\n    ? dateFormatted.getMonth() + 1 : `0${dateFormatted.getMonth() + 1}`; \n \n    return `${day}/${month}/${year} ${hour}:${minute}:${second}`;\n };\n \n export default formatDateTime;","import styled, {keyframes} from 'styled-components';\n\ninterface IContainerProps {\n    color: string;\n}\n\nconst animate = keyframes`\n    0%{\n        transform: translateX(100px);\n        opacity: 0;\n    }\n    50%{     \n        opacity: .3;\n    }\n    100%{\n        transform: translateX(0px);\n        opacity: 1;\n    }\n`;\n\n\n\n\n\n\nexport const Container = styled.div<IContainerProps>`\n    width: 48%;\n    height: 140px;\n\n    /* display: inline-flex; */\n    flex-direction: column;\n    justify-content: space-between;\n\n    margin: 10px 10px;\n    \n    background-color: ${props => props.color};\n    color: ${props => props.theme.colors.black};\n\n    border-radius: 7px;\n    /* padding: 10px 10px; */\n\n    position: relative;\n    overflow: hidden;\n\n    float: right;\n    /* margin-right: 0px; */\n\n    animation: ${animate} .5s;\n\n    -webkit-box-shadow: 0px 0px 12px -8px #000000; \n    box-shadow: 0px 0px 12px -8px #000000;\n\n    > div {\n        width: 100%;\n        \n        background-color:${props => props.theme.colors.black};\n        height: 140px;\n        position: relative;\n        \n        color: #000;\n\n        right: -165px;\n        display: flex;\n        align-items: right;\n\n\n\n    }\n\n    > div.userCol {\n        position:relative\n    }\n    \n    \n    > div.userName{\n        height: 40px;\n        \n    }\n\n\n    > div.userScore{\n        height: 20px;\n    }\n\n    .row {\n        display: flex;\n        flex-wrap: wrap;\n        margin-right: 5px; \n        margin-left: 15px;\n        top: 16px;\n        position: relative;\n    }\n   \n    .Col {\n        clear:both;\n        float:left;\n        display:inline-block;\n\n    }\n\n    > span {\n        font-size: 14px;\n        width: 130px;\n        position: absolute;\n        margin: 0px;\n        line-height:1;\n        align-items: center;\n        text-align: center;\n        top: 15px;\n        left: 23px;\n\n    }\n\n     > img {\n        height: 50%;\n        \n        position: absolute;\n        top: 55px;\n        left: 50px;\n\n    }\n\n    /*\n\n    > small {\n        font-size: 12px;\n        position: absolute;\n        bottom: 10px;\n        \n    }\n\n    > h1 {\n        font-size: 21px;\n        position: absolute;\n        top: 60px;\n    }\n\n    > h3 {\n        font-size: 14px;\n        position:absolute;\n        bottom:7px;\n        left: 50px;\n\n    } */\n\n\n\n    @media(max-width: 770px){\n        > span {\n            font-size: 10px;\n        }\n\n        > h1 {\n            word-wrap: break-word;\n            font-size: 22px;\n\n            strong {\n                display: inline-block;\n                width: 100%;\n                font-size: 16px;\n            }\n        }\n    }\n\n    @media(max-width: 420px){\n        width: 100%;\n\n        > Col {\n            display: flex\n        }\n\n        > h1 {\n            display: flex;\n            \n            strong {\n                position: initial;        \n                width: auto;\n                font-size: 22px;\n            }\n\n            strong:after {\n                display: inline-block;\n                content: '';\n                width: 1px;                \n            }\n        }\n    }\n`;","import React, {useState, useEffect, useMemo} from 'react';\nimport CountUp from 'react-countup';\n\nimport {Table, Pagination, Button, Col, Row} from 'react-bootstrap';\n\nimport dolarImg from '../../assets/total-acessos.svg';\nimport arrowUpImg from '../../assets/acessos-horas.svg';\nimport Flash from '../../assets/clock-time.svg';\nimport Ranking from '../../assets/ranking.svg';\nimport SartPoints from '../../assets/star.svg';\n\nimport {Task} from '../../services/api';\nimport Crown from '../../assets/crown.svg';\n\nimport formatDateTime from '../../utils/formatDateTime';\n\n\nimport { Container }  from './styles';\nimport { isNamedExportBindings } from 'typescript';\n\ninterface IBoxRankingIndicatorProps {\n    title: string;\n    amount: number;\n    footerlabel: string;\n    icon: 'dolar' | 'arrowUp' | 'Flash' | 'Ranking';\n    color: string;\n    text: string;\n    users: Array<Task>;\n    istime: boolean;\n    \n}\n\n\n\nconst BoxRankingIndicator: React.FC<IBoxRankingIndicatorProps> = ({\n    title,\n    amount,\n    footerlabel,\n    icon,\n    color,\n    text,\n    users,\n    istime\n    \n    \n}) => {\n\n    const iconSelected = useMemo(() => {\n        switch (icon) {\n            case 'dolar':\n                return dolarImg;\n            case 'arrowUp': \n                return arrowUpImg;\n            case 'Flash':\n                return Flash;\n            case 'Ranking':\n                return Ranking;\n            default:\n              return undefined;\n        }\n    },[icon]);\n\n    \n\n    return (\n        \n        <>\n        \n        <Container color={color}>\n            \n            <>\n                {users.map((user, index) => (\n                    <>\n                    <div className='userName'>\n                    <Table id='ExcelExport'   variant=\"light\" >\n                        <tbody>\n                            <tr key={index} >\n                                <Row>\n                                    <Col xs={1}style={{ color: '#054267', fontWeight: 'bold', fontSize:'14px', backgroundColor: '#fff'}}> {index + 1} </Col>\n                                    \n                                    <Col xs={4}style={{ color: '#3c87b6', fontWeight: 'bold', fontSize:'12px' , backgroundColor: '#fff'}}>  {user.name} </Col>\n\n\n                                    {\n                                        istime ? \n                                            <Col xs={5} style={{ color: '#000000', fontWeight: 'bold', backgroundColor: '#fff'}}> <img src={SartPoints} width='20px'/> {user.final_score} pontos </Col>\n                                        :  \n                                            <Col xs={5} style={{ color: '#020202', fontWeight: 'bold', backgroundColor: '#fff'}}>  {user.total_time} tempo </Col>\n                                    }\n                                    \n                                    \n                                </Row>\n                            </tr>\n                        </tbody>\n                    </Table> \n                    </div>\n                        \n                    </>\n                                                          \n\n                ))}\n\n            </>\n\n\n            \n\n\n            \n\n            \n\n          \n\n          <span>{title}</span>\n          <div></div>\n          <strong></strong>\n          <img src={iconSelected} alt={title} />\n        \n        {/* <h1>\n          <CountUp\n            end={amount}\n            separator=\".\"\n            decimal=\",\"\n            decimals={0} />\n        </h1> */}\n\n        {/* <small>{footerlabel}</small> */}\n        \n        {/* <h3> {text} </h3> */}\n      \n        \n      </Container>\n      \n        \n        \n        </>\n    );  \n}\n\nexport default BoxRankingIndicator;\n\n\n","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n    justify-content:center;\n    align-items:center;\n\n    /* display: flex; */\n    /* text-align: center; */\n    /* margin-top:25%; */\n    /* width: 100%;\n    height: 100vh; */\n\n    span > {\n        justify-content:center;\n        align-items:center;\n        display: flex;\n        position:relative;\n\n\n    }\n\n\n    h1 >{\n        justify-content:center;\n        align-items:center;\n        display: flex;\n    \n\n    }\n\n\n    div > h1 {\n        font-size:12px;\n        color: #545454;\n        justify-content:center;\n        align-items:center;\n        position: relative;\n        margin: 0 auto;\n        width: 100%;\n        height: 100vh;\n        text-align: center;\n\n    }\n\n    > Table {\n        -webkit-box-shadow: 0px 0px 12px -8px #000000; \n        box-shadow: 0px 0px 12px -8px #000000;\n    }\n`;\n\n\n\nexport const Content = styled.div`\n    display: table-flex;\n    justify-content: space-between;\n    \n    width: 100%;\n    justify-content:center;\n    align-items:center;\n\n    \n`;\n\nexport const Table = styled.thead`\n    position: absolute;\n    margin-top: 50px;\n    border-radius: 45px;\n    \n\n\n    color: ${props => props.theme.colors.black};\n\n    background-color: ${props => props.theme.colors.tertiary};\n    border-color: ${props => props.theme.colors.warning}\n\n\n    \n\n\n`;\n\n\n","  import React, {useState, useEffect} from 'react';\n  import {Table, Pagination, Button} from 'react-bootstrap';\n  import {Api, Task} from '../../services/api';\n  import formatDateTime from '../../utils/formatDateTime';\n\n  // import BoxRankingIndicator from '../../components/BoxRankingIndicator';\n  import BoxRankingIndicator from '../../components/BoxRankingIndicator';\n\n  import { css } from \"@emotion/core\";\n  import ClipLoader from \"react-spinners/RingLoader\";\n\n  import { jsPDF } from \"jspdf\";\n\n  import Crown from '../../assets/crown.svg';\n  import SartPoints from '../../assets/star.svg';\n  import Calendar from '../../assets/calendar.svg';\n  import Clock from '../../assets/clock-2.svg';\n  // import ClockTime from '../../assets/clock-time.svg';\n\n\n  import {\n    Container,\n    Content,\n  } from './styles';\n\n\n  function Tasks(): JSX.Element {\n\n    const override = css`\n      display: block;\n      margin: 0 auto;\n      margin-top: 25%;\n      position: relative;\n\n\n    `;\n\n    const [loading, setLoading] = useState(false);\n    let [color, setColor] = useState(\"#2695F9\");\n\n    const [tasks, setTasks] = useState<Task[]>([]);\n\n    const [usersScore, setScore] = useState<Task[]>([]);\n    const [usersTime, setTime] = useState<Task[]>([]);\n    \n    \n    \n    const [pages, setPages] = useState(0);\n    const [pageActive, setPageActive] = useState(1);\n\n    \n\n    useEffect(() => {\n      loadApi();\n\n    }, []);\n\n    async function loadApi() {\n      let api = new Api();\n\n      setLoading(true);\n\n      await api.getData();\n      \n      let tasks = api.getTasks();\n\n      let totalPages = Math.ceil(tasks.length/20);\n\n      \n      setScore(api.getUserTotalScore());\n      setTime(api.getUserTotalTime());\n      \n      setPages(totalPages);\n\n      setTasks(tasks);    \n\n      setLoading(false);\n    }\n\n    function setPage (page:number){      \n      setPageActive(page)\n\n    }\n\n    function paginationItem (): JSX.Element[] {\n      let itens = [];\n\n      for (let i = 1; i <= pages; i++){\n        itens.push( \n          <Pagination.Item key={i} active={i === pageActive} onClick={(event) => setPage(i)} >\n            {i}       \n                                \n          </Pagination.Item>\n\n        )\n\n      }\n      return itens;\n    }\n\n    return (\n\n\n\n  <Container>\n      <Content>\n        <div>\n          {\n\n          loading ?\n\n            <div className=\"sweet-loading\">\n              <h1>\n                <ClipLoader color={color} loading={loading} css={override} size={90} />\n                <div>Carregando</div>\n              </h1>\n\n            </div>\n\n\n          :        \n          <>\n          \n          <BoxRankingIndicator \n              title=\"Pontuações em Destaque\"\n              color=\"#2695F9\"\n              amount={50}\n              footerlabel=\"\"\n              icon=\"Ranking\"\n              text=\"minutos\"\n              users={usersScore}\n              istime={true}\n              \n          />\n\n          \n          <BoxRankingIndicator \n              title=\"Destaques por Tempo\"\n              color=\"#2695F9\"\n              amount={50}\n              footerlabel=\"\"\n              icon=\"Flash\"\n              text=\"minutos\"\n              users={usersTime}\n              istime={false}\n              \n          />\n\n\n          \n          \n          {/* <Button variant=\"dark\">PDF</Button>{' '}\n          <Button variant=\"dark\">EXCEL</Button>{' '} */}\n\n\n                {/* <Pagination size=\"sm\" style={{marginRight: '50px', position: \"absolute\"}}>\n                  {\n                    paginationItem ()\n                  }\n                </Pagination> */}\n                          \n        \n                <Table id='ExcelExport' striped bordered hover variant=\"light\">\n                  <thead style={{ color: '#054267', fontWeight: 'bold', backgroundColor: '#FFFFFF' }}>\n                    <tr>\n                      <th style={{ color: '#054267', textAlign: 'center', backgroundColor: '#fff' }}> </th>\n                      <th>Nome</th>\n                      <th>Tempo</th>\n                      <th>Data</th>\n                      <th>Pontuação</th>\n                    </tr>\n                  </thead>\n\n                  \n\n                  <tbody>\n\n                    {tasks.slice(20*(pageActive-1), 20*pageActive).map((task, index) => (\n                      <tr key={index} style={index < 10 ? { color: '#166493', backgroundColor: '#fff', fontSize:'14px', borderBottom: '2px solid #DCDCDC'} : { color: '#394144', fontSize:'14px' }}>\n                        <td style={{ color: '#054267', textAlign: 'center', fontWeight: 'bold', fontSize:'20px' }}> {(index + 1)+(20*(pageActive-1))} </td>\n\n                        {\n                          ((index + 1)+(20*(pageActive-1))) == 1 ? \n                            <td> <img src={Crown} width='20px'/> {task.name} </td>\n                          : \n                            <td> {task.name} </td>\n                        }\n\n                        <td> <img src={Clock} width='15px'/> {task.total_time} </td>\n                        <td> <img src={Calendar} width='20px'/> {formatDateTime(task.Data)}</td>\n                        <td> <img src={SartPoints} width='20px'/> {task.final_score}</td>\n\n                      </tr>\n\n                    ))}\n\n\n                  </tbody>\n                </Table>\n\n                <Pagination size=\"sm\">\n                  {\n                    paginationItem ()\n                  }\n                </Pagination>\n\n              </>\n\n          }\n        </div>\n        </Content>\n      </Container>\n\n    )\n  }\n\n  export default Tasks\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from '../components/Layout';\n\nimport Dashboard from '../pages/Dashboard';\nimport RankingGeral from '../pages/Ranking'\n// import List from '../pages/List';\n\nconst AppRoutes: React.FC = () => (\n    <Layout>\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/ranking\" exact component ={RankingGeral} />\n            {/* <Route path=\"/list/:type\" exact component={List} /> */}\n        </Switch>\n    </Layout>\n);\n\nexport default AppRoutes;","import styled from 'styled-components';\n\nexport const Container = styled.input`\n    width: 100%;\n\n    margin: 7px 0;\n    padding: 10px;\n\n    border-radius: 5px;\n    color: ${props => props.theme.colors.middleGray};\n`;","import React, { InputHTMLAttributes } from 'react';\n\nimport { Container }  from './styles'\n\ntype IInputProps = InputHTMLAttributes<HTMLInputElement>;\n\nconst Input: React.FC<IInputProps> = ({ ...rest }) => (\n    <Container {...rest} />\n);\n\nexport default Input;","import styled from 'styled-components';\n\nexport const Container = styled.button`\n    width: 100%;\n\n    margin: 7px 0;\n    padding: 10px;\n\n    border-radius: 5px;\n\n    font-weight: bold;\n    color: ${props => props.theme.colors.colorTextButton};\n    background-color: ${props => props.theme.colors.warning};\n\n    transition: opacity .3s;\n\n    &:hover{\n        opacity: .7;\n    }\n`;","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container }  from './styles'\n\ntype IButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<IButtonProps> = ({children, ...rest }) => (\n    <Container {...rest}>\n        {children}\n    </Container>\n);\n\nexport default Button;","import styled from 'styled-components';\n\n// import bgVideo from '../../components/video/video.mp4';\n\nexport const Container = styled.div`\n    height: 100%;\n    width: 100%;\n    position: absolute;\n\n    \n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    background-color: ${props => props.theme.colors.primary};\n\n    > img {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n    }\n\n`;\n\nexport const Version = styled.div`\n\n    > div {\n        position: absolute;\n        color: ${props => props.theme.colors.gray};\n        font-size: 10px;\n        bottom: 5px;\n        left: 5px;\n        z-index:1;\n    }\n\n`\n\nexport const Logo = styled.div`\n    display: flex;\n    align-items: center;\n    z-index:1;\n\n    margin-bottom: 30px;\n\n    > h2 {\n        /* color: ${props => props.theme.colors.white};  */\n        margin-left: 7px;\n        margin-top:9px;\n        font-size:18px;\n        color: ${props => props.theme.colors.success};  \n        font-style: italic;\n    }\n\n    > img {\n        width: 140px;\n        height: 40px;\n    }\n\n    /* > h1 {\n        width:50px;\n        position:relative;\n        align-items:center;\n    } */\n`;\n\nexport const Form = styled.form`\n    width: 300px;\n    height: 300px;\n    z-index:1;\n\n    padding: 30px;\n\n    border-radius: 10px;\n\n    background-color: ${props => props.theme.colors.tertiary};\n`;\n\nexport const FormTitle = styled.h1`\n    margin-bottom: 40px;\n\n    color: ${props => props.theme.colors.titleForm}; \n\n    &:after {\n        content: '';\n        display: block;\n        width: 55px;\n        border-bottom: 10px solid ${props => props.theme.colors.success};  \n    }\n`;\n\n","import React, {useState} from 'react';\n\nimport logoImgB from '../../assets/logo-mp-branco.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { useAuth } from '../../hooks/auth';\n\nimport bgSigin from '../../assets/backgrounds/analytics-bg12.jpg';\n\n// import bgVideo from '../../assets/video.mp4';\n\n\n\nimport {\n    Container,\n    Logo,\n    Form,\n    FormTitle,\n    Version\n    \n} from './styles';\n\nconst SignIn: React.FC = () => {\n    const [name, setName] = useState<string>('');\n    const [password, setPassword] = useState<string>('');    \n\n    const { signIn } = useAuth();\n\n    return (\n        <Container>\n\n            \n            <Logo>\n                <img src={logoImgB} alt=\"MicroPower Analytics\" /> \n                <h2>analytics</h2>\n            </Logo>\n\n            <Form onSubmit={() => signIn(name, password)}>\n                <FormTitle>Entrar</FormTitle>\n\n                <Input \n                    type=\"name\"\n                    placeholder=\"nome\"\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <Input \n                    type=\"password\"\n                    placeholder=\"senha\"\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n               <Button type=\"submit\">Acessar</Button>\n            </Form>\n{/* \n            <video width=\"100%\" height=\"100%\" controls >\n                <source src={bgVideo} type=\"video/mp4\"/>\n            </video> */}\n\n            <img src={bgSigin} alt=\"MicroPower\"/>\n\n            <Version>\n                <div>Micro Power - Analytics - Versão 1.2.0</div> \n            </Version>\n        </Container>\n\n    \n\n    );\n}\n\nexport default SignIn;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'; \n\nimport SignIn from '../pages/SignIn';\n\nconst AuthRoutes: React.FC = () => (\n    <Switch>\n        <Route path=\"/\" component={SignIn} />\n    </Switch>\n);\n\nexport default AuthRoutes;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport { useAuth } from '../hooks/auth';\n\nimport App from './app.routes';\nimport Auth from './auth.routes';\n\nconst Routes: React.FC = () => {\n    const { logged } = useAuth();\n    \n    return (\n        <BrowserRouter>\n            { logged ? <App/> : <Auth /> }\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\n\nimport { useTheme } from './hooks/theme';\n\nimport Routes from './routes';\n\nimport { BrowserRouter } from 'react-router-dom'\n\n\nconst App: React.FC = () => {\n    const {theme} = useTheme();\n    \n    return (\n        <ThemeProvider theme={theme}>\n            <BrowserRouter>\n                <GlobalStyles />\n                <Routes />\n            </BrowserRouter>\n        </ThemeProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ThemeProvider } from './hooks/theme';\nimport { AuthProvider } from './hooks/auth';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>    \n    <ThemeProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/star.7484aa4c.svg\";"],"sourceRoot":""}